{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "TestComponent",
            "id": "component-TestComponent-82d9e4fbe39e63163941a26028f15a1596f44a4561c2bb52c6bf469f08515e172431dbbe9532593fe1533c28dea03a3a1f0fc7b6727ad3437eb1c66b4b270738",
            "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<p [tooltip]=\"'Hello'\">Hello Directive</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TooltipDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\nimport { TooltipDirective } from 'angular-component-library';\nimport { Component } from '@angular/core';\n\n@Component({\n    template: `<p [tooltip]=\"'Hello'\">Hello Directive</p>`,\n    standalone: true,\n    imports: [TooltipDirective]\n})\nclass TestComponent {}\n\nexport default {\n    title: 'Directives/Tooltip',\n    component: TestComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [TooltipDirective]\n        })\n    ]\n} as Meta;\n\ntype Story = StoryObj;\n\nexport const Sample: Story = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Active',\n        isActive: true,\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Active',\n        isActive: true,\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        isDisabled: false,\n        isActive: true,\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Active',\n        isActive: true,\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "animationStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "AnimationStyle"
            },
            {
                "name": "Changes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 1,\n        borderRadius: 50,\n        classStyle: 'changes',\n        isDisabled: false\n    }\n}"
            },
            {
                "name": "contentItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ContentItem[]",
                "defaultValue": "[\n    new ContentItem(\n        '1',\n        'user1',\n        'user1@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '1'],\n            ['name', 'user1'],\n            ['email', 'user1@localhost.de']\n        ])\n    ),\n    new ContentItem(\n        '2',\n        'user2',\n        'user2@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '2'],\n            ['name', 'user2'],\n            ['email', 'user2@localhost.de']\n        ])\n    ),\n    new ContentItem(\n        '3',\n        'user3',\n        'user3@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '3'],\n            ['name', 'user3'],\n            ['email', 'user3@localhost.de']\n        ])\n    ),\n    new ContentItem(\n        '4',\n        'user4',\n        'user4@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '4'],\n            ['name', 'user4'],\n            ['email', 'user4@localhost.de']\n        ])\n    ),\n        new ContentItem(\n        '5',\n        'user5',\n        'user5@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '5'],\n            ['name', 'user5'],\n            ['email', 'user5@localhost.de']\n        ])\n    )\n]",
                "rawdescription": "Table cells are filled by column/ Map",
                "description": "<p>Table cells are filled by column/ Map</p>\n"
            },
            {
                "name": "defaultTemplateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <collapsible-component [show]=\"true\" [classStyles]=\"'simple'\">\n        <div header>\n            <p [style.width.px]=\"200\">Header</p>\n        </div>\n        <div content>\n            <p [style.padding-left.px]=\"15\">Your Content</p>\n        </div>\n    </collapsible-component>\n `"
            },
            {
                "name": "defaultTemplateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <table-component [style.width]=\"'100%'\">\n        <div header>\n            <table-header-component \n                [headerItemsTasks]=\"items\" \n                [searchFilters]=\"filters\" \n                [multiSelectList]=\"multiSelectList\" \n                (searchFilterChange)=\"searchFilterChange($event)\" \n                (selectFilterChange)=\"selectFilterChange($event)\"\n                (sortColumnChange)=\"sortColumnChange($event)\">\n            </table-header-component>\n        </div>\n        <div content>\n            <table-content-component\n                [tableItems]=\"contentItems\" \n                (tableItemSelected)=\"tableItemSelected($event)\">\n            </table-content-component>\n        </div>\n    </table-component>\n `"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Delete',\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Delete',\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Delete',\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "DeleteActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'DeleteActive',\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "DeleteActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'DeleteActive',\n        isDisabled: false,\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "DeleteActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'DeleteActive',\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "DeleteDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'DeleteDisabled',\n        isDisabled: true,\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "DeleteDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'DeleteDisabled',\n        isDisabled: true,\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "DeleteDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'DeleteDisabled',\n        isDisabled: true,\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Disabled',\n        isDisabled: true,\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Disabled',\n        isDisabled: true,\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        isDisabled: true,\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Disabled',\n        isDisabled: true,\n        faIcon: faInfoCircle,\n        classStyle: 'inverted'\n    }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Disabled',\n        checked: true,\n        isDisabled: true\n    }\n}"
            },
            {
                "name": "ErrorWithLink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        title: 'Error Alert',\n        message: 'Error Message',\n        type: AlertType.ERROR,\n        visibleState: true\n    }\n}"
            },
            {
                "name": "faDown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IconDefinition",
                "defaultValue": "faChevronDown"
            },
            {
                "name": "faUp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IconDefinition",
                "defaultValue": "faChevronUp"
            },
            {
                "name": "filters",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "getSearchFilters(headerItems)"
            },
            {
                "name": "headerItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ColumnHeaderItem[]",
                "defaultValue": "[\n    new ColumnHeaderItem('Id', 'id', ColumnType.STRING, false),\n    new ColumnHeaderItem('Name', 'name', ColumnType.STRING, false),\n    new ColumnHeaderItem('Email', 'email', ColumnType.STRING, false)\n]"
            },
            {
                "name": "hoverStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "HoverStyle"
            },
            {
                "name": "hoverStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "HoverStyle"
            },
            {
                "name": "hoverStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "HoverStyle"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        faIcon: faInfoCircle\n    }\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfo: faInfo\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfo: faInfo,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\n    faChevronDown: faChevronDown,\n    faCheck: faCheck,\n    faFilter: faFilter,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\n    faChevronDown: faChevronDown,\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
            },
            {
                "name": "iconTemplateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <collapsible-component [(show)]=\"show\" [classStyles]=\"'simple'\">\n        <div header>\n            <div class=\"flex-row\">\n                <p [style.width.px]=\"200\">Header with icon</p>\n                <fa-icon [icon]=\"show ? faUp : faDown\"> </fa-icon>\n            </div>\n        </div>\n        <div content>\n            <p [style.padding-left.px]=\"15\">Your Content</p>\n        </div>\n    </collapsible-component>\n `"
            },
            {
                "name": "InfoAlert",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        title: 'Info Alert',\n        message: 'Info  Message',\n        type: AlertType.INFO,\n        visibleState: true,\n        navigationLink: 'pailot.com',\n        navigationLinkLabel: 'Further informations under pailto.com '\n    }\n}"
            },
            {
                "name": "Inverted",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Inverted',\n        faIcon: faInfoCircle,\n        hoverStyle: HoverStyle.INVERTED\n    }\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        size: 'large',\n        label: 'Button'\n    }\n}"
            },
            {
                "name": "loaderStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "LoaderStyle"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        user: {\n            name: 'Jane Doe'\n        }\n    }\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n        const loginButton = canvas.getByRole('button', { name: /Log in/i });\n        await expect(loginButton).toBeInTheDocument();\n        await userEvent.click(loginButton);\n        await expect(loginButton).not.toBeInTheDocument();\n\n        const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n        await expect(logoutButton).toBeInTheDocument();\n    }\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n    title: 'Example/Button',\n    component: ButtonComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        backgroundColor: {\n            control: 'color'\n        }\n    },\n    // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n    args: { onClick: fn() }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\n    title: 'Example/Header',\n    component: HeaderComponent,\n    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n    tags: ['autodocs'],\n    parameters: {\n        // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n        layout: 'fullscreen'\n    },\n    args: {\n        onLogin: fn(),\n        onLogout: fn(),\n        onCreateAccount: fn()\n    }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<OverviewWrapperComponent>",
                "defaultValue": "{\n    title: 'Overview',\n    component: OverviewWrapperComponent,\n    parameters: {\n        docs: {\n            disable: true // 📛 verhindert die Nutzung von Compodoc-Daten\n        }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\n    title: 'Example/Page',\n    component: PageComponent,\n    parameters: {\n        // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n        layout: 'fullscreen'\n    }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertComponent>",
                "defaultValue": "{\n    title: 'Components/Alert',\n    component: AlertComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [RouterModule],\n            providers: [\n                {\n                    provide: ActivatedRoute,\n                    useValue: {\n                        snapshot: {\n                            paramMap: new Map([['id', '123']]),\n                            data: {}\n                        },\n                        params: [{ id: '123' }],\n                        queryParams: {}\n                    } // Mocking der ActivatedRoute, so dass sie params und andere Routen-Daten zurückgibt\n                }\n            ]\n        })\n    ],\n    tags: ['autodocs'],\n    argTypes: {\n        title: { control: 'text', value: '' },\n        message: { control: 'text', value: '' },\n        type: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(types),\n            mapping: AlertType,\n            value: AlertType.SUCCESS\n        },\n        visibleState: { control: 'boolean', value: false },\n        navigationLink: { control: 'text', value: undefined },\n        navigationLinkLabel: { control: 'text', value: undefined },\n        visibleStateChange: { action: 'changed' }\n    },\n    args: { visibleStateChange: fn() }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeComponent>",
                "defaultValue": "{\n    title: 'Components/Badge',\n    component: BadgeComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        label: { control: 'text' },\n        borderRadius: { control: 'number' },\n        classStyle: {\n            control: 'select',\n            options: [\n                'running',\n                'failed',\n                'success',\n                'pending',\n                'changes',\n                'urgent',\n                'frozen',\n                'current',\n                'manual',\n                'free'\n            ]\n        },\n        isDisabled: { control: 'boolean' },\n        postIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        preIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        }\n    }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BorderedBtnComponent>",
                "defaultValue": "{\n    title: 'Components/Buttons/Bordered Btn',\n    component: BorderedBtnComponent,\n    argTypes: {\n        ariaLabel: { control: 'text' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        hoverStyle: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(hoverStyles),\n            mapping: HoverStyle\n        },\n        showIcon: { control: 'boolean' },\n        isDisabled: { control: 'boolean' },\n        classStyle: {\n            control: 'select',\n            options: ['gray', 'delete']\n        },\n        width: { control: 'text' },\n        isSpinning: { control: 'boolean' },\n        isActive: { control: 'boolean' }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BorderlessBtnComponent>",
                "defaultValue": "{\n    title: 'Components/Buttons/Borderless Btn',\n    component: BorderlessBtnComponent,\n    argTypes: {\n        ariaLabel: { control: 'text' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        hoverStyle: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(hoverStyles),\n            mapping: HoverStyle\n        },\n        showIcon: { control: 'boolean' },\n        isDisabled: { control: 'boolean' },\n        classStyle: {\n            control: 'select',\n            options: ['delete']\n        },\n        width: { control: 'text' },\n        isSpinning: { control: 'boolean' },\n        isActive: { control: 'boolean' }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CircleBtnComponent>",
                "defaultValue": "{\n    title: 'Components/Buttons/Circle Btn',\n    component: CircleBtnComponent,\n    argTypes: {\n        ariaLabel: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        backgroundColor: { control: 'text' },\n        isDisabled: { control: 'boolean' },\n        classStyle: { control: 'text' },\n        width: { control: 'text' },\n        isSpinning: { control: 'boolean' },\n        isActive: { control: 'boolean' }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\n    title: 'Components/Checkbox',\n    component: CheckboxComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        value: { control: 'boolean' },\n        mode: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(types),\n            mapping: EditMode,\n            value: EditMode.WRITE\n        },\n        height: { control: 'number' },\n        valueChange: { action: 'changed' }\n    },\n    args: { valueChange: fn() }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorPaletteComponent>",
                "defaultValue": "{\n    title: 'Components/ColorPalette',\n    component: ColorPaletteComponent,\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CollapsibleComponent>",
                "defaultValue": "{\n    title: 'Components/Collapsible',\n    component: CollapsibleComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A collapsible component provides per default only a \\`<div header></div>\\` and \\`<div content></div>\\`, so you can fill the table how you want.\n\n You could also add a faIcon in header to show that the row can be toggled -> like in the example.\n \n                 `\n            }\n        }\n    },\n    decorators: [\n        (story) => {\n            const storyObj = story();\n            return {\n                moduleMetadata: {\n                    imports: [CollapsibleComponent, FontAwesomeModule]\n                },\n                template: storyObj.template,\n                props: storyObj.props\n            };\n        }\n    ],\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerComponent>",
                "defaultValue": "{\n    title: 'Components/Date Picker/Date',\n    component: DatePickerComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A date picker component.\n\n A date can be from type Date or string. The format has to be \\`yyyy-mm-dd\\` or \\`yyyy-mm-ddTHH:MM\\`  -> no time zone.\n \n                 `\n            }\n        }\n    },\n    argTypes: {\n        date: { control: 'text' },\n        withInput: { control: 'boolean' },\n        clear: { control: 'boolean', value: true },\n        dateChanged: { action: 'changed', value: true }\n    },\n    args: { dateChanged: fn() },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateRangePickerComponent>",
                "defaultValue": "{\n    title: 'Components/Date Picker/Date Range',\n    component: DateRangePickerComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A date range picker component. \n                 `\n            }\n        }\n    },\n    argTypes: {\n        startDate: { control: 'date', value: new Date() },\n        endDate: { control: 'date', value: new Date() },\n        startDateChange: { action: 'changed' },\n        endDateChange: { action: 'changed' }\n    },\n    args: {\n        startDateChange: fn(),\n        endDateChange: fn()\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateTimePickerComponent>",
                "defaultValue": "{\n    title: 'Components/Date Picker/Date time',\n    component: DateTimePickerComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A date time picker component.\n\n A date is from type string. The format has to be \\`yyyy-mm-dd\\` or \\`yyyy-mm-ddTHH:MM\\`  -> no time zone.\n \n                 `\n            }\n        }\n    },\n    argTypes: {\n        date: { control: 'text', value: '' },\n        mode: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(types),\n            mapping: EditMode,\n            value: EditMode.WRITE\n        },\n        height: { control: 'number' },\n        minWidth: { control: 'number' },\n        dateChange: { action: 'changed' }\n    },\n    args: { dateChange: fn() },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DropzoneComponent>",
                "defaultValue": "{\n    title: 'Components/Dropzone',\n    component: DropzoneComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        choseFileLabel: { control: 'text' },\n        allowedExtension: { control: 'check', options: ['json'] },\n        fileArrayLength: { control: 'number' },\n        files: { control: { type: 'file', accept: '.json' } },\n        maxSizeOfFiles: { control: 'number' },\n        height: { control: 'text' },\n        width: { control: 'text' }\n    },\n    decorators: [\n        (story) => ({\n            template: `<div style=\"width: 300px;\">${story().template}</div>`,\n            props: story().props\n        })\n    ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FilledBtnComponent>",
                "defaultValue": "{\n    title: 'Components/Buttons/Filled Btn',\n    component: FilledBtnComponent,\n    argTypes: {\n        ariaLabel: { control: 'text' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        hoverStyle: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(hoverStyles),\n            mapping: HoverStyle\n        },\n        showIcon: { control: 'boolean' },\n        isDisabled: { control: 'boolean' },\n        classStyle: {\n            control: 'select',\n            options: ['delete', 'not-emphrazed', 'navbar-btn']\n        },\n        width: { control: 'text' },\n        isSpinning: { control: 'boolean' },\n        isActive: { control: 'boolean' }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\n    title: 'Components/Input',\n    component: InputComponent,\n    argTypes: {\n        input: { control: 'text' },\n        classStyles: {\n            control: 'select',\n            options: [\n                '',\n                'no-radius',\n                'full-width',\n                'small left',\n                'small right'\n            ]\n        },\n        placeholderText: { control: 'text' },\n        type: { control: 'text' },\n        inputChange: { action: 'change' }\n    },\n    args: {\n        type: 'text',\n        inputChange: fn()\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoaderComponent>",
                "defaultValue": "{\n    title: 'Components/Loader',\n    component: LoaderComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A loader component. \n                 `\n            }\n        }\n    },\n    tags: ['autodocs'],\n    argTypes: {\n        label: { control: 'text', value: '' },\n        loaderStyle: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(loaderStyles),\n            mapping: LoaderStyle,\n            value: LoaderStyle.DOT_LOADER\n        },\n        animation: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(animationStyles),\n            mapping: AnimationStyle,\n            value: AnimationStyle.LINEAR\n        },\n        paddingTop: { control: 'text' }\n    },\n    args: {\n        paddingTop: '20%'\n    }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MultiSelectComponent>",
                "defaultValue": "{\n    title: 'Components/Select/ Multi',\n    component: MultiSelectComponent,\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to select multiple items.'\n            }\n        }\n    },\n    argTypes: {\n        items: { control: 'object' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        withFilter: { control: 'boolean' },\n        filterPlaceholder: { control: 'text' },\n        backgroundColor: { control: 'text' },\n        itemsSelected: { action: 'selected' }\n    },\n    args: {\n        label: '',\n        items: [],\n        itemsSelected: fn()\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NoDataComponent>",
                "defaultValue": "{\n    title: 'Components/No Data',\n    component: NoDataComponent,\n    argTypes: {\n        translationKey: { control: 'text' }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PopoverComponent>",
                "defaultValue": "{\n    title: 'Components/Popover',\n    component: PopoverComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA popover.\n\nA popover component .\n\n<img src=\"https://img.shields.io/badge/version-1.0.2-blue\" alt=\"Version: 1.0.2\" />\n\n                `\n            }\n        }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchInputComponent>",
                "defaultValue": "{\n    title: 'Components/Search Input',\n    component: SearchInputComponent,\n    argTypes: {\n        filter: { control: 'text' },\n        classStyles: {\n            control: 'select',\n            options: [\n                '',\n                'no-radius',\n                'full-width',\n                'small left',\n                'small right'\n            ]\n        },\n        placeholderText: { control: 'text' },\n        filterChange: { action: 'change' }\n    },\n    args: { filterChange: fn() },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SegmentedBtnComponent>",
                "defaultValue": "{\n    title: 'Components/Segmented Btn',\n    component: SegmentedBtnComponent,\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to switch content'\n            }\n        }\n    },\n    argTypes: {\n        btnArray: { control: 'object' },\n        activeBtn: { control: 'object' },\n        btnSelected: { action: 'selected' },\n        activeBtnChange: { action: 'activeBtn' }\n    },\n    args: {\n        btnSelected: fn(),\n        activeBtnChange: fn()\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\n    title: 'Components/Select/ Single',\n    component: SelectComponent,\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to select items.'\n            }\n        }\n    },\n    argTypes: {\n        items: { control: 'object' },\n        selectedItem: { control: 'object' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        faIconBefore: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        classStyle: { control: 'text' },\n        withBlankOption: { control: 'boolean' },\n        withDeselect: { control: 'boolean' },\n        withFilter: { control: 'boolean' },\n        filterPlaceholder: { control: 'text' },\n        show: { control: 'boolean' },\n        showChange: { action: 'show' },\n        itemSelected: { action: 'selected' }\n    },\n    args: {\n        showChange: fn(),\n        itemSelected: fn()\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\n    title: 'Components/Table/ Table',\n    component: TableComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [\n                TableComponent,\n                TableHeaderComponent,\n                TableContentComponent\n            ]\n        })\n    ],\n    subcomponents: { TableHeaderComponent, TableContentComponent},\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA table component provides per default only a \\`<div header></div>\\` and \\`<div content></div>\\`, so you can fill the table how you want.\n\nYou can also use a table component with a \\`table-header-component\\` and a \\`table-content-component\\`. \nTo use it you have to create the following items:\n\ntable-header-component\n- headerItemsTasks from type \\`ColumnHeaderItem\\`\n- searchFilters from type  \\`SearchFilter\\`\n- multiSelectList from type \\`{ [key: string]: TableColumnType[]}\\`\n\ntable-content-component\n- tableItems should have a parameter called \\`columns\\` from  type \\`Map<string, TableColumnType>)\\`\n\nEvery logic to sort the content has to be implemented by yourself.\n\n                `\n            }\n        }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabsViewComponent>",
                "defaultValue": "{\n    title: 'Components/TabsView',\n    component: TabsViewComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [TabsViewComponent, TabComponent]\n        })\n    ],\n    parameters: {\n        docs: {\n            description: {\n                story: 'TabsView to switch content'\n            }\n        }\n    },\n    argTypes: {\n        selectedTabChanged: { action: 'changed' }\n    },\n    args: { selectedTabChanged: fn() },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TagBtnComponent>",
                "defaultValue": "{\n    title: 'Components/Tag',\n    component: TagBtnComponent,\n    argTypes: {\n        label: { control: 'text' },\n        backgroundColor: { control: 'text' },\n        removeTagSelected: { action: 'changed' }\n    },\n    args: { removeTagSelected: fn() },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToggleBtnComponent>",
                "defaultValue": "{\n    title: 'Components/Toggle Btn',\n    component: ToggleBtnComponent,\n    argTypes: {\n        label: { control: 'text' },\n        checked: { control: 'boolean' },\n        isDisabled: { control: 'boolean' },\n        classStyle: { control: 'text' },\n        checkedChange: { action: 'changed' }\n    },\n    args: { checkedChange: fn() },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipComponent>",
                "defaultValue": "{\n    title: 'Components/Tooltip',\n    component: TooltipComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA tooltip.\n\nInstead of this component you can use the tooltip directve \\`[tooltip]=\" 'text'\"\\`\n\n<img src=\"https://img.shields.io/badge/version-1.0.2-blue\" alt=\"Version: 1.0.2\" />\n\n                `\n            }\n        }\n    },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableContentComponent>",
                "defaultValue": "{\n    title: 'Components/Table/Table Content',\n    component: TableContentComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA table content component.\n                `\n            }\n        }\n    },\n    decorators: [\n        (story) => ({\n            template: `<div style=\"width: 600px;\">${story().template}</div>`,\n            props: story().props\n        })\n    ],\n    argTypes: {\n        tableItems: { control: 'object' },\n        tableHeight: { control: 'text' },\n        tableItemSelected: { action: 'select' },\n    },\n    args: { \n        tableItemSelected: fn(),\n        tableHeight: '275px',\n     },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableHeaderComponent>",
                "defaultValue": "{\n    title: 'Components/Table/Table Header',\n    component: TableHeaderComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA table header component.\n                `\n            }\n        }\n    },\n    argTypes: {\n        headerItemsTasks: { control: 'object' },\n        searchFilters: { control: 'object' },\n        multiSelectList: { control: 'object' },\n        searchFilterChange: { action: 'search' },\n        sortColumnChange: { action: 'sort' },\n        selectFilterChange: { action: 'multi select' },\n    },\n    args: { \n        searchFilterChange: fn(),\n        sortColumnChange: fn(),\n        selectFilterChange: fn()\n     },\n    tags: ['autodocs']\n}"
            },
            {
                "name": "multiSelectList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "getSelectList(headerItems, contentItems)"
            },
            {
                "name": "Off",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Off',\n        checked: false\n    }\n}"
            },
            {
                "name": "On",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'On',\n        checked: true\n    }\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n    parameters: {\n        layout: 'centered',\n        controls: {\n            matchers: {\n                color: /(background|color)$/i,\n                date: /Date$/i\n            }\n        },\n        actions: {\n            argTypesRegex: '(Change|Clicked|Selected)$'\n        },\n        designToken: {\n            defaultTab: 'Colors',\n            tokens: {\n                color: ['../assets/styles.scss']\n            }\n        }\n    },\n    decorators: [\n        applicationConfig({\n            providers: [\n                {\n                    provide: TranslateLoader,\n                    useClass: FakeLoader\n                },\n                {\n                    provide: TranslateCompiler,\n                    useClass: TranslateFakeCompiler\n                },\n                {\n                    provide: TranslateParser,\n                    useClass: TranslateDefaultParser\n                },\n                {\n                    provide: MissingTranslationHandler,\n                    useValue: null\n                },\n                {\n                    provide: USE_DEFAULT_LANG,\n                    useValue: true\n                },\n                {\n                    provide: DEFAULT_LANGUAGE,\n                    useValue: true\n                },\n                {\n                    provide: USE_EXTEND,\n                    useValue: false\n                },\n                { provide: ISOALTE_TRANSLATE_SERVICE, useValue: false },\n                TranslateStore,\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: (translate: TranslateService) => () => {\n                        translate.setDefaultLang('de');\n                        translate.use('de');\n                        return Promise.resolve();\n                    },\n                    deps: [TranslateService],\n                    multi: true\n                }\n            ]\n        })\n    ]\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        primary: true,\n        label: 'Button'\n    }\n}"
            },
            {
                "name": "ReadMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        value: true,\n        mode: EditMode.READ\n    }\n}"
            },
            {
                "name": "RunningWithPostIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Running',\n        borderRadius: 10,\n        classStyle: 'running',\n        isDisabled: false,\n        postIcon: faCheck,\n        preIcon: undefined\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Sample',\n        borderRadius: 10,\n        isDisabled: false,\n        postIcon: undefined,\n        preIcon: undefined\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Sample'\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Sample',\n        isDisabled: false\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        isDisabled: false,\n        faIcon: faCheck\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        value: true,\n        mode: EditMode.WRITE\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {}\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args\n        },\n        template: defaultTemplateMock\n    })\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        date: '2025-05-11',\n        withInput: true\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        startDate: new Date(),\n        endDate: new Date()\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        date: '2025-05-11',\n        withInput: true\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        height: '100px',\n        width: '300px',\n        choseFileLabel: 'Load Input files'\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Sample',\n        isDisabled: false\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        input: '123456'\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Loading...',\n        animation: AnimationStyle.EASE,\n        loaderStyle: LoaderStyle.SPINNER,\n        paddingTop: '0px'\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Label',\n        faIcon: faFilter,\n        items: selectItems,\n        backgroundColor: 'green'\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        translationKey: 'data.noData'\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: () => ({\n        template: `<div [style.border]=\"'1px solid black'\" [style.position]=\"'relative'\" [style.height.px]=\"30\" [style.width.px]=\"30\"><popover-component [show]=true><p>Hello</p></popover-component></div>`\n    })\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        filter: '123456'\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        btnArray: btnArray,\n        activeBtn: activeBtn\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to switch content'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Label: ',\n        items: selectItems,\n        selectedItem: selectedItem,\n        filterPlaceholder: 'Select...',\n        show: true\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to select items'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            items: headerItems,\n            filters: filters,\n            multiSelectList: multiSelectList,\n            contentItems: contentItems,\n            searchFilterChange: (event: any) => {\n                action('filter')(event);\n            },\n            sortColumnChange: (event: any) => {\n                action('sort')(event);\n            },\n            selectFilterChange: (event: any) => {\n                action('select')(event);\n            },\n            tableItemSelected: (event: any) => {\n                action('selected row')(event);\n            }\n        },\n        template: defaultTemplateMock\n    })\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: args,\n        template: templateMock\n    })\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: () => ({\n        template: `<tooltip-component [style.position]=\"'relative'\"></tooltip-component>`\n    })\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n     args: {\n        tableItems: contentItems,\n        tableHeight: '275px',\n        tableItemSelected: (event: any) => {\n            action('selected row')(event);\n        }\n    }\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n     args: {\n        headerItemsTasks: headerItems,\n        searchFilters: filters,\n        searchFilterChange: (event: any) => {\n            action('filter')(event);\n        },\n        sortColumnChange: (event: any) => {\n            action('sort')(event);\n        },\n        selectFilterChange: (event: any) => {\n            action('select')(event);\n        },\n    }\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Button'\n    }\n}"
            },
            {
                "name": "selectedItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new SelectItem('select1', undefined, Icons.faInfoCircle)"
            },
            {
                "name": "selectItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['item1', 'item2', 'item3']"
            },
            {
                "name": "selectItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    new SelectItem('select1', undefined, Icons.faInfoCircle),\n    new SelectItem('select2', undefined, Icons.faInfoCircle),\n    new SelectItem('select3')\n]"
            },
            {
                "name": "show",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "false"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        size: 'small',\n        label: 'Button'\n    }\n}"
            },
            {
                "name": "Spinning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Spinning',\n        isSpinning: true,\n        faIcon: faSpinner\n    }\n}"
            },
            {
                "name": "Spinning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Spinning',\n        isSpinning: true,\n        faIcon: faSpinner\n    }\n}"
            },
            {
                "name": "Spinning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        isDisabled: false,\n        isSpinning: true,\n        faIcon: faSpinner\n    }\n}"
            },
            {
                "name": "Spinning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Spinning',\n        isSpinning: true,\n        faIcon: faSpinner\n    }\n}"
            },
            {
                "name": "SuccessAlert",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        title: 'Success Alert',\n        message: 'Success Message',\n        type: AlertType.SUCCESS,\n        visibleState: true\n    }\n}"
            },
            {
                "name": "SuccessWithPreIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Success',\n        borderRadius: 10,\n        classStyle: 'success',\n        isDisabled: false,\n        postIcon: undefined,\n        preIcon: faInfo\n    }\n}"
            },
            {
                "name": "Tag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Tag 1'\n    }\n}"
            },
            {
                "name": "TagBackgroundGreen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Tag 2',\n        backgroundColor: 'green'\n    }\n}"
            },
            {
                "name": "templateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <bordered-btn-component\n        (click)=\"click($event)\"\n        [label]=\"'Click me!'\">\n    </bordered-btn-component>\n `"
            },
            {
                "name": "templateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <borderless-btn-component\n        (click)=\"click($event)\"\n        [label]=\"'Click me!'\">\n    </borderless-btn-component>\n `"
            },
            {
                "name": "templateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <filled-btn-component\n        (click)=\"click($event)\"\n        [label]=\"'Click me!'\">\n    </filled-btn-component>\n `"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "AlertType"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "EditMode"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "EditMode"
            },
            {
                "name": "WarningAlert",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        title: 'Warning Alert',\n        message: 'Warning Message',\n        type: AlertType.WARNING,\n        visibleState: true\n    }\n}"
            },
            {
                "name": "WithAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            click: () => {\n                action('do something')();\n            }\n        },\n        template: templateMock\n    })\n}"
            },
            {
                "name": "WithAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            click: () => {\n                action('do something')();\n            }\n        },\n        template: templateMock\n    })\n}"
            },
            {
                "name": "WithAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            click: () => {\n                action('do something')();\n            }\n        },\n        template: templateMock\n    })\n}"
            },
            {
                "name": "WithAlert",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            selectedTabChanged: (payload: string) => {\n                action('tabSwitched')(payload);\n            }\n        },\n        template: templateMock\n    })\n}"
            },
            {
                "name": "WithFilter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        faIcon: faFilter,\n        items: selectItems,\n        withFilter: true,\n\n        filterPlaceholder: 'Select...',\n        backgroundColor: '#486bff'\n    }\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            faUp: faUp,\n            faDown: faDown,\n            show: show\n        },\n        template: iconTemplateMock\n    })\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<OverviewWrapperComponent>",
                "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertComponent>",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeComponent>",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BorderedBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BorderlessBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CircleBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorPaletteComponent>",
                "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CollapsibleComponent>",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerComponent>",
                "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateRangePickerComponent>",
                "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateTimePickerComponent>",
                "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DropzoneComponent>",
                "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FilledBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoaderComponent>",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MultiSelectComponent>",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NoDataComponent>",
                "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PopoverComponent>",
                "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchInputComponent>",
                "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SegmentedBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsViewComponent>",
                "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TagBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipComponent>",
                "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableContentComponent>",
                "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableHeaderComponent>",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Active',\n        isActive: true,\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Delete',\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "DeleteActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'DeleteActive',\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "DeleteDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'DeleteDisabled',\n        isDisabled: true,\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Disabled',\n        isDisabled: true,\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "hoverStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "HoverStyle"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfo: faInfo,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
                },
                {
                    "name": "Inverted",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Inverted',\n        faIcon: faInfoCircle,\n        hoverStyle: HoverStyle.INVERTED\n    }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BorderedBtnComponent>",
                    "defaultValue": "{\n    title: 'Components/Buttons/Bordered Btn',\n    component: BorderedBtnComponent,\n    argTypes: {\n        ariaLabel: { control: 'text' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        hoverStyle: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(hoverStyles),\n            mapping: HoverStyle\n        },\n        showIcon: { control: 'boolean' },\n        isDisabled: { control: 'boolean' },\n        classStyle: {\n            control: 'select',\n            options: ['gray', 'delete']\n        },\n        width: { control: 'text' },\n        isSpinning: { control: 'boolean' },\n        isActive: { control: 'boolean' }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Sample'\n    }\n}"
                },
                {
                    "name": "Spinning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Spinning',\n        isSpinning: true,\n        faIcon: faSpinner\n    }\n}"
                },
                {
                    "name": "templateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <bordered-btn-component\n        (click)=\"click($event)\"\n        [label]=\"'Click me!'\">\n    </bordered-btn-component>\n `"
                },
                {
                    "name": "WithAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            click: () => {\n                action('do something')();\n            }\n        },\n        template: templateMock\n    })\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Active',\n        isActive: true,\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Delete',\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "DeleteActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'DeleteActive',\n        isDisabled: false,\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "DeleteDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'DeleteDisabled',\n        isDisabled: true,\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Disabled',\n        isDisabled: true,\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "hoverStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "HoverStyle"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BorderlessBtnComponent>",
                    "defaultValue": "{\n    title: 'Components/Buttons/Borderless Btn',\n    component: BorderlessBtnComponent,\n    argTypes: {\n        ariaLabel: { control: 'text' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        hoverStyle: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(hoverStyles),\n            mapping: HoverStyle\n        },\n        showIcon: { control: 'boolean' },\n        isDisabled: { control: 'boolean' },\n        classStyle: {\n            control: 'select',\n            options: ['delete']\n        },\n        width: { control: 'text' },\n        isSpinning: { control: 'boolean' },\n        isActive: { control: 'boolean' }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Sample',\n        isDisabled: false\n    }\n}"
                },
                {
                    "name": "Spinning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Spinning',\n        isSpinning: true,\n        faIcon: faSpinner\n    }\n}"
                },
                {
                    "name": "templateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <borderless-btn-component\n        (click)=\"click($event)\"\n        [label]=\"'Click me!'\">\n    </borderless-btn-component>\n `"
                },
                {
                    "name": "WithAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            click: () => {\n                action('do something')();\n            }\n        },\n        template: templateMock\n    })\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        isDisabled: false,\n        isActive: true,\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        isDisabled: true,\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CircleBtnComponent>",
                    "defaultValue": "{\n    title: 'Components/Buttons/Circle Btn',\n    component: CircleBtnComponent,\n    argTypes: {\n        ariaLabel: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        backgroundColor: { control: 'text' },\n        isDisabled: { control: 'boolean' },\n        classStyle: { control: 'text' },\n        width: { control: 'text' },\n        isSpinning: { control: 'boolean' },\n        isActive: { control: 'boolean' }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        isDisabled: false,\n        faIcon: faCheck\n    }\n}"
                },
                {
                    "name": "Spinning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        isDisabled: false,\n        isSpinning: true,\n        faIcon: faSpinner\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Active',\n        isActive: true,\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Delete',\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "DeleteActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'DeleteActive',\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "DeleteDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'DeleteDisabled',\n        isDisabled: true,\n        isActive: true,\n        faIcon: faTrash,\n        classStyle: 'delete',\n        width: '200px'\n    }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Disabled',\n        isDisabled: true,\n        faIcon: faInfoCircle,\n        classStyle: 'inverted'\n    }\n}"
                },
                {
                    "name": "hoverStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "HoverStyle"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        faIcon: faInfoCircle\n    }\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FilledBtnComponent>",
                    "defaultValue": "{\n    title: 'Components/Buttons/Filled Btn',\n    component: FilledBtnComponent,\n    argTypes: {\n        ariaLabel: { control: 'text' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        hoverStyle: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(hoverStyles),\n            mapping: HoverStyle\n        },\n        showIcon: { control: 'boolean' },\n        isDisabled: { control: 'boolean' },\n        classStyle: {\n            control: 'select',\n            options: ['delete', 'not-emphrazed', 'navbar-btn']\n        },\n        width: { control: 'text' },\n        isSpinning: { control: 'boolean' },\n        isActive: { control: 'boolean' }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Sample',\n        isDisabled: false\n    }\n}"
                },
                {
                    "name": "Spinning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Spinning',\n        isSpinning: true,\n        faIcon: faSpinner\n    }\n}"
                },
                {
                    "name": "templateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <filled-btn-component\n        (click)=\"click($event)\"\n        [label]=\"'Click me!'\">\n    </filled-btn-component>\n `"
                },
                {
                    "name": "WithAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            click: () => {\n                action('do something')();\n            }\n        },\n        template: templateMock\n    })\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/loader/loader.stories.ts": [
                {
                    "name": "animationStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "AnimationStyle"
                },
                {
                    "name": "loaderStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "LoaderStyle"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoaderComponent>",
                    "defaultValue": "{\n    title: 'Components/Loader',\n    component: LoaderComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A loader component. \n                 `\n            }\n        }\n    },\n    tags: ['autodocs'],\n    argTypes: {\n        label: { control: 'text', value: '' },\n        loaderStyle: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(loaderStyles),\n            mapping: LoaderStyle,\n            value: LoaderStyle.DOT_LOADER\n        },\n        animation: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(animationStyles),\n            mapping: AnimationStyle,\n            value: AnimationStyle.LINEAR\n        },\n        paddingTop: { control: 'text' }\n    },\n    args: {\n        paddingTop: '20%'\n    }\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Loading...',\n        animation: AnimationStyle.EASE,\n        loaderStyle: LoaderStyle.SPINNER,\n        paddingTop: '0px'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/badge/badge.stories.ts": [
                {
                    "name": "Changes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 1,\n        borderRadius: 50,\n        classStyle: 'changes',\n        isDisabled: false\n    }\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfo: faInfo\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeComponent>",
                    "defaultValue": "{\n    title: 'Components/Badge',\n    component: BadgeComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        label: { control: 'text' },\n        borderRadius: { control: 'number' },\n        classStyle: {\n            control: 'select',\n            options: [\n                'running',\n                'failed',\n                'success',\n                'pending',\n                'changes',\n                'urgent',\n                'frozen',\n                'current',\n                'manual',\n                'free'\n            ]\n        },\n        isDisabled: { control: 'boolean' },\n        postIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        preIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        }\n    }\n}"
                },
                {
                    "name": "RunningWithPostIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Running',\n        borderRadius: 10,\n        classStyle: 'running',\n        isDisabled: false,\n        postIcon: faCheck,\n        preIcon: undefined\n    }\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Sample',\n        borderRadius: 10,\n        isDisabled: false,\n        postIcon: undefined,\n        preIcon: undefined\n    }\n}"
                },
                {
                    "name": "SuccessWithPreIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Success',\n        borderRadius: 10,\n        classStyle: 'success',\n        isDisabled: false,\n        postIcon: undefined,\n        preIcon: faInfo\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts": [
                {
                    "name": "contentItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContentItem[]",
                    "defaultValue": "[\n    new ContentItem(\n        '1',\n        'user1',\n        'user1@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '1'],\n            ['name', 'user1'],\n            ['email', 'user1@localhost.de']\n        ])\n    ),\n    new ContentItem(\n        '2',\n        'user2',\n        'user2@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '2'],\n            ['name', 'user2'],\n            ['email', 'user2@localhost.de']\n        ])\n    ),\n    new ContentItem(\n        '3',\n        'user3',\n        'user3@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '3'],\n            ['name', 'user3'],\n            ['email', 'user3@localhost.de']\n        ])\n    ),\n    new ContentItem(\n        '4',\n        'user4',\n        'user4@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '4'],\n            ['name', 'user4'],\n            ['email', 'user4@localhost.de']\n        ])\n    ),\n        new ContentItem(\n        '5',\n        'user5',\n        'user5@localhost.de',\n        new Map<string, TableColumnType>([\n            ['id', '5'],\n            ['name', 'user5'],\n            ['email', 'user5@localhost.de']\n        ])\n    )\n]",
                    "rawdescription": "Table cells are filled by column/ Map",
                    "description": "<p>Table cells are filled by column/ Map</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableContentComponent>",
                    "defaultValue": "{\n    title: 'Components/Table/Table Content',\n    component: TableContentComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA table content component.\n                `\n            }\n        }\n    },\n    decorators: [\n        (story) => ({\n            template: `<div style=\"width: 600px;\">${story().template}</div>`,\n            props: story().props\n        })\n    ],\n    argTypes: {\n        tableItems: { control: 'object' },\n        tableHeight: { control: 'text' },\n        tableItemSelected: { action: 'select' },\n    },\n    args: { \n        tableItemSelected: fn(),\n        tableHeight: '275px',\n     },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n     args: {\n        tableItems: contentItems,\n        tableHeight: '275px',\n        tableItemSelected: (event: any) => {\n            action('selected row')(event);\n        }\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts": [
                {
                    "name": "defaultTemplateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <collapsible-component [show]=\"true\" [classStyles]=\"'simple'\">\n        <div header>\n            <p [style.width.px]=\"200\">Header</p>\n        </div>\n        <div content>\n            <p [style.padding-left.px]=\"15\">Your Content</p>\n        </div>\n    </collapsible-component>\n `"
                },
                {
                    "name": "faDown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "defaultValue": "faChevronDown"
                },
                {
                    "name": "faUp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "defaultValue": "faChevronUp"
                },
                {
                    "name": "iconTemplateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <collapsible-component [(show)]=\"show\" [classStyles]=\"'simple'\">\n        <div header>\n            <div class=\"flex-row\">\n                <p [style.width.px]=\"200\">Header with icon</p>\n                <fa-icon [icon]=\"show ? faUp : faDown\"> </fa-icon>\n            </div>\n        </div>\n        <div content>\n            <p [style.padding-left.px]=\"15\">Your Content</p>\n        </div>\n    </collapsible-component>\n `"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CollapsibleComponent>",
                    "defaultValue": "{\n    title: 'Components/Collapsible',\n    component: CollapsibleComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A collapsible component provides per default only a \\`<div header></div>\\` and \\`<div content></div>\\`, so you can fill the table how you want.\n\n You could also add a faIcon in header to show that the row can be toggled -> like in the example.\n \n                 `\n            }\n        }\n    },\n    decorators: [\n        (story) => {\n            const storyObj = story();\n            return {\n                moduleMetadata: {\n                    imports: [CollapsibleComponent, FontAwesomeModule]\n                },\n                template: storyObj.template,\n                props: storyObj.props\n            };\n        }\n    ],\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args\n        },\n        template: defaultTemplateMock\n    })\n}"
                },
                {
                    "name": "show",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "false"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            faUp: faUp,\n            faDown: faDown,\n            show: show\n        },\n        template: iconTemplateMock\n    })\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table.stories.ts": [
                {
                    "name": "defaultTemplateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <table-component [style.width]=\"'100%'\">\n        <div header>\n            <table-header-component \n                [headerItemsTasks]=\"items\" \n                [searchFilters]=\"filters\" \n                [multiSelectList]=\"multiSelectList\" \n                (searchFilterChange)=\"searchFilterChange($event)\" \n                (selectFilterChange)=\"selectFilterChange($event)\"\n                (sortColumnChange)=\"sortColumnChange($event)\">\n            </table-header-component>\n        </div>\n        <div content>\n            <table-content-component\n                [tableItems]=\"contentItems\" \n                (tableItemSelected)=\"tableItemSelected($event)\">\n            </table-content-component>\n        </div>\n    </table-component>\n `"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\n    title: 'Components/Table/ Table',\n    component: TableComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [\n                TableComponent,\n                TableHeaderComponent,\n                TableContentComponent\n            ]\n        })\n    ],\n    subcomponents: { TableHeaderComponent, TableContentComponent},\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA table component provides per default only a \\`<div header></div>\\` and \\`<div content></div>\\`, so you can fill the table how you want.\n\nYou can also use a table component with a \\`table-header-component\\` and a \\`table-content-component\\`. \nTo use it you have to create the following items:\n\ntable-header-component\n- headerItemsTasks from type \\`ColumnHeaderItem\\`\n- searchFilters from type  \\`SearchFilter\\`\n- multiSelectList from type \\`{ [key: string]: TableColumnType[]}\\`\n\ntable-content-component\n- tableItems should have a parameter called \\`columns\\` from  type \\`Map<string, TableColumnType>)\\`\n\nEvery logic to sort the content has to be implemented by yourself.\n\n                `\n            }\n        }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "multiSelectList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "getSelectList(headerItems, contentItems)"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            items: headerItems,\n            filters: filters,\n            multiSelectList: multiSelectList,\n            contentItems: contentItems,\n            searchFilterChange: (event: any) => {\n                action('filter')(event);\n            },\n            sortColumnChange: (event: any) => {\n                action('sort')(event);\n            },\n            selectFilterChange: (event: any) => {\n                action('select')(event);\n            },\n            tableItemSelected: (event: any) => {\n                action('selected row')(event);\n            }\n        },\n        template: defaultTemplateMock\n    })\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Disabled',\n        checked: true,\n        isDisabled: true\n    }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToggleBtnComponent>",
                    "defaultValue": "{\n    title: 'Components/Toggle Btn',\n    component: ToggleBtnComponent,\n    argTypes: {\n        label: { control: 'text' },\n        checked: { control: 'boolean' },\n        isDisabled: { control: 'boolean' },\n        classStyle: { control: 'text' },\n        checkedChange: { action: 'changed' }\n    },\n    args: { checkedChange: fn() },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Off",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Off',\n        checked: false\n    }\n}"
                },
                {
                    "name": "On",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'On',\n        checked: true\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/alert/alert.stories.ts": [
                {
                    "name": "ErrorWithLink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        title: 'Error Alert',\n        message: 'Error Message',\n        type: AlertType.ERROR,\n        visibleState: true\n    }\n}"
                },
                {
                    "name": "InfoAlert",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        title: 'Info Alert',\n        message: 'Info  Message',\n        type: AlertType.INFO,\n        visibleState: true,\n        navigationLink: 'pailot.com',\n        navigationLinkLabel: 'Further informations under pailto.com '\n    }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertComponent>",
                    "defaultValue": "{\n    title: 'Components/Alert',\n    component: AlertComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [RouterModule],\n            providers: [\n                {\n                    provide: ActivatedRoute,\n                    useValue: {\n                        snapshot: {\n                            paramMap: new Map([['id', '123']]),\n                            data: {}\n                        },\n                        params: [{ id: '123' }],\n                        queryParams: {}\n                    } // Mocking der ActivatedRoute, so dass sie params und andere Routen-Daten zurückgibt\n                }\n            ]\n        })\n    ],\n    tags: ['autodocs'],\n    argTypes: {\n        title: { control: 'text', value: '' },\n        message: { control: 'text', value: '' },\n        type: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(types),\n            mapping: AlertType,\n            value: AlertType.SUCCESS\n        },\n        visibleState: { control: 'boolean', value: false },\n        navigationLink: { control: 'text', value: undefined },\n        navigationLinkLabel: { control: 'text', value: undefined },\n        visibleStateChange: { action: 'changed' }\n    },\n    args: { visibleStateChange: fn() }\n}"
                },
                {
                    "name": "SuccessAlert",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        title: 'Success Alert',\n        message: 'Success Message',\n        type: AlertType.SUCCESS,\n        visibleState: true\n    }\n}"
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "AlertType"
                },
                {
                    "name": "WarningAlert",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        title: 'Warning Alert',\n        message: 'Warning Message',\n        type: AlertType.WARNING,\n        visibleState: true\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts": [
                {
                    "name": "filters",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "getSearchFilters(headerItems)"
                },
                {
                    "name": "headerItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnHeaderItem[]",
                    "defaultValue": "[\n    new ColumnHeaderItem('Id', 'id', ColumnType.STRING, false),\n    new ColumnHeaderItem('Name', 'name', ColumnType.STRING, false),\n    new ColumnHeaderItem('Email', 'email', ColumnType.STRING, false)\n]"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableHeaderComponent>",
                    "defaultValue": "{\n    title: 'Components/Table/Table Header',\n    component: TableHeaderComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA table header component.\n                `\n            }\n        }\n    },\n    argTypes: {\n        headerItemsTasks: { control: 'object' },\n        searchFilters: { control: 'object' },\n        multiSelectList: { control: 'object' },\n        searchFilterChange: { action: 'search' },\n        sortColumnChange: { action: 'sort' },\n        selectFilterChange: { action: 'multi select' },\n    },\n    args: { \n        searchFilterChange: fn(),\n        sortColumnChange: fn(),\n        selectFilterChange: fn()\n     },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n     args: {\n        headerItemsTasks: headerItems,\n        searchFilters: filters,\n        searchFilterChange: (event: any) => {\n            action('filter')(event);\n        },\n        sortColumnChange: (event: any) => {\n            action('sort')(event);\n        },\n        selectFilterChange: (event: any) => {\n            action('select')(event);\n        },\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts": [
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\n    faChevronDown: faChevronDown,\n    faCheck: faCheck,\n    faFilter: faFilter,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MultiSelectComponent>",
                    "defaultValue": "{\n    title: 'Components/Select/ Multi',\n    component: MultiSelectComponent,\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to select multiple items.'\n            }\n        }\n    },\n    argTypes: {\n        items: { control: 'object' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        withFilter: { control: 'boolean' },\n        filterPlaceholder: { control: 'text' },\n        backgroundColor: { control: 'text' },\n        itemsSelected: { action: 'selected' }\n    },\n    args: {\n        label: '',\n        items: [],\n        itemsSelected: fn()\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Label',\n        faIcon: faFilter,\n        items: selectItems,\n        backgroundColor: 'green'\n    }\n}"
                },
                {
                    "name": "selectItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['item1', 'item2', 'item3']"
                },
                {
                    "name": "WithFilter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        faIcon: faFilter,\n        items: selectItems,\n        withFilter: true,\n\n        filterPlaceholder: 'Select...',\n        backgroundColor: '#486bff'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/select/select.stories.ts": [
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\n    faChevronDown: faChevronDown,\n    faCheck: faCheck,\n    faExclamation: faExclamation,\n    faInfoCircle: faInfoCircle,\n    faSpinner: faSpinner,\n    faTrash: faTrash\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\n    title: 'Components/Select/ Single',\n    component: SelectComponent,\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to select items.'\n            }\n        }\n    },\n    argTypes: {\n        items: { control: 'object' },\n        selectedItem: { control: 'object' },\n        label: { control: 'text' },\n        faIcon: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        faIconBefore: {\n            control: {\n                type: 'select'\n            },\n            options: Object.keys(iconOptions),\n            mapping: iconOptions\n        },\n        classStyle: { control: 'text' },\n        withBlankOption: { control: 'boolean' },\n        withDeselect: { control: 'boolean' },\n        withFilter: { control: 'boolean' },\n        filterPlaceholder: { control: 'text' },\n        show: { control: 'boolean' },\n        showChange: { action: 'show' },\n        itemSelected: { action: 'selected' }\n    },\n    args: {\n        showChange: fn(),\n        itemSelected: fn()\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Label: ',\n        items: selectItems,\n        selectedItem: selectedItem,\n        filterPlaceholder: 'Select...',\n        show: true\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to select items'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "selectedItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new SelectItem('select1', undefined, Icons.faInfoCircle)"
                },
                {
                    "name": "selectItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    new SelectItem('select1', undefined, Icons.faInfoCircle),\n    new SelectItem('select2', undefined, Icons.faInfoCircle),\n    new SelectItem('select3')\n]"
                }
            ],
            "projects/angular-component-library/src/lib/stories/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        size: 'large',\n        label: 'Button'\n    }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n    title: 'Example/Button',\n    component: ButtonComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        backgroundColor: {\n            control: 'color'\n        }\n    },\n    // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n    args: { onClick: fn() }\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        primary: true,\n        label: 'Button'\n    }\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Button'\n    }\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        size: 'small',\n        label: 'Button'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        user: {\n            name: 'Jane Doe'\n        }\n    }\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\n    title: 'Example/Header',\n    component: HeaderComponent,\n    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n    tags: ['autodocs'],\n    parameters: {\n        // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n        layout: 'fullscreen'\n    },\n    args: {\n        onLogin: fn(),\n        onLogout: fn(),\n        onCreateAccount: fn()\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n        const loginButton = canvas.getByRole('button', { name: /Log in/i });\n        await expect(loginButton).toBeInTheDocument();\n        await userEvent.click(loginButton);\n        await expect(loginButton).not.toBeInTheDocument();\n\n        const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n        await expect(logoutButton).toBeInTheDocument();\n    }\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\n    title: 'Example/Page',\n    component: PageComponent,\n    parameters: {\n        // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n        layout: 'fullscreen'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<OverviewWrapperComponent>",
                    "defaultValue": "{\n    title: 'Overview',\n    component: OverviewWrapperComponent,\n    parameters: {\n        docs: {\n            disable: true // 📛 verhindert die Nutzung von Compodoc-Daten\n        }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\n    title: 'Components/Checkbox',\n    component: CheckboxComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        value: { control: 'boolean' },\n        mode: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(types),\n            mapping: EditMode,\n            value: EditMode.WRITE\n        },\n        height: { control: 'number' },\n        valueChange: { action: 'changed' }\n    },\n    args: { valueChange: fn() }\n}"
                },
                {
                    "name": "ReadMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        value: true,\n        mode: EditMode.READ\n    }\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        value: true,\n        mode: EditMode.WRITE\n    }\n}"
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "EditMode"
                }
            ],
            "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorPaletteComponent>",
                    "defaultValue": "{\n    title: 'Components/ColorPalette',\n    component: ColorPaletteComponent,\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {}\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerComponent>",
                    "defaultValue": "{\n    title: 'Components/Date Picker/Date',\n    component: DatePickerComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A date picker component.\n\n A date can be from type Date or string. The format has to be \\`yyyy-mm-dd\\` or \\`yyyy-mm-ddTHH:MM\\`  -> no time zone.\n \n                 `\n            }\n        }\n    },\n    argTypes: {\n        date: { control: 'text' },\n        withInput: { control: 'boolean' },\n        clear: { control: 'boolean', value: true },\n        dateChanged: { action: 'changed', value: true }\n    },\n    args: { dateChanged: fn() },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        date: '2025-05-11',\n        withInput: true\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateRangePickerComponent>",
                    "defaultValue": "{\n    title: 'Components/Date Picker/Date Range',\n    component: DateRangePickerComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A date range picker component. \n                 `\n            }\n        }\n    },\n    argTypes: {\n        startDate: { control: 'date', value: new Date() },\n        endDate: { control: 'date', value: new Date() },\n        startDateChange: { action: 'changed' },\n        endDateChange: { action: 'changed' }\n    },\n    args: {\n        startDateChange: fn(),\n        endDateChange: fn()\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        startDate: new Date(),\n        endDate: new Date()\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateTimePickerComponent>",
                    "defaultValue": "{\n    title: 'Components/Date Picker/Date time',\n    component: DateTimePickerComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\n A date time picker component.\n\n A date is from type string. The format has to be \\`yyyy-mm-dd\\` or \\`yyyy-mm-ddTHH:MM\\`  -> no time zone.\n \n                 `\n            }\n        }\n    },\n    argTypes: {\n        date: { control: 'text', value: '' },\n        mode: {\n            control: {\n                type: 'select'\n            },\n            options: Object.values(types),\n            mapping: EditMode,\n            value: EditMode.WRITE\n        },\n        height: { control: 'number' },\n        minWidth: { control: 'number' },\n        dateChange: { action: 'changed' }\n    },\n    args: { dateChange: fn() },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        date: '2025-05-11',\n        withInput: true\n    }\n}"
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "EditMode"
                }
            ],
            "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DropzoneComponent>",
                    "defaultValue": "{\n    title: 'Components/Dropzone',\n    component: DropzoneComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        choseFileLabel: { control: 'text' },\n        allowedExtension: { control: 'check', options: ['json'] },\n        fileArrayLength: { control: 'number' },\n        files: { control: { type: 'file', accept: '.json' } },\n        maxSizeOfFiles: { control: 'number' },\n        height: { control: 'text' },\n        width: { control: 'text' }\n    },\n    decorators: [\n        (story) => ({\n            template: `<div style=\"width: 300px;\">${story().template}</div>`,\n            props: story().props\n        })\n    ]\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        height: '100px',\n        width: '300px',\n        choseFileLabel: 'Load Input files'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/input/input.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\n    title: 'Components/Input',\n    component: InputComponent,\n    argTypes: {\n        input: { control: 'text' },\n        classStyles: {\n            control: 'select',\n            options: [\n                '',\n                'no-radius',\n                'full-width',\n                'small left',\n                'small right'\n            ]\n        },\n        placeholderText: { control: 'text' },\n        type: { control: 'text' },\n        inputChange: { action: 'change' }\n    },\n    args: {\n        type: 'text',\n        inputChange: fn()\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        input: '123456'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NoDataComponent>",
                    "defaultValue": "{\n    title: 'Components/No Data',\n    component: NoDataComponent,\n    argTypes: {\n        translationKey: { control: 'text' }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        translationKey: 'data.noData'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/popover/popover.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PopoverComponent>",
                    "defaultValue": "{\n    title: 'Components/Popover',\n    component: PopoverComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA popover.\n\nA popover component .\n\n<img src=\"https://img.shields.io/badge/version-1.0.2-blue\" alt=\"Version: 1.0.2\" />\n\n                `\n            }\n        }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: () => ({\n        template: `<div [style.border]=\"'1px solid black'\" [style.position]=\"'relative'\" [style.height.px]=\"30\" [style.width.px]=\"30\"><popover-component [show]=true><p>Hello</p></popover-component></div>`\n    })\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchInputComponent>",
                    "defaultValue": "{\n    title: 'Components/Search Input',\n    component: SearchInputComponent,\n    argTypes: {\n        filter: { control: 'text' },\n        classStyles: {\n            control: 'select',\n            options: [\n                '',\n                'no-radius',\n                'full-width',\n                'small left',\n                'small right'\n            ]\n        },\n        placeholderText: { control: 'text' },\n        filterChange: { action: 'change' }\n    },\n    args: { filterChange: fn() },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        filter: '123456'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SegmentedBtnComponent>",
                    "defaultValue": "{\n    title: 'Components/Segmented Btn',\n    component: SegmentedBtnComponent,\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to switch content'\n            }\n        }\n    },\n    argTypes: {\n        btnArray: { control: 'object' },\n        activeBtn: { control: 'object' },\n        btnSelected: { action: 'selected' },\n        activeBtnChange: { action: 'activeBtn' }\n    },\n    args: {\n        btnSelected: fn(),\n        activeBtnChange: fn()\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        btnArray: btnArray,\n        activeBtn: activeBtn\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Component to switch content'\n            }\n        }\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabsViewComponent>",
                    "defaultValue": "{\n    title: 'Components/TabsView',\n    component: TabsViewComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [TabsViewComponent, TabComponent]\n        })\n    ],\n    parameters: {\n        docs: {\n            description: {\n                story: 'TabsView to switch content'\n            }\n        }\n    },\n    argTypes: {\n        selectedTabChanged: { action: 'changed' }\n    },\n    args: { selectedTabChanged: fn() },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: args,\n        template: templateMock\n    })\n}"
                },
                {
                    "name": "WithAlert",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            selectedTabChanged: (payload: string) => {\n                action('tabSwitched')(payload);\n            }\n        },\n        template: templateMock\n    })\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TagBtnComponent>",
                    "defaultValue": "{\n    title: 'Components/Tag',\n    component: TagBtnComponent,\n    argTypes: {\n        label: { control: 'text' },\n        backgroundColor: { control: 'text' },\n        removeTagSelected: { action: 'changed' }\n    },\n    args: { removeTagSelected: fn() },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Tag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Tag 1'\n    }\n}"
                },
                {
                    "name": "TagBackgroundGreen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Tag 2',\n        backgroundColor: 'green'\n    }\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipComponent>",
                    "defaultValue": "{\n    title: 'Components/Tooltip',\n    component: TooltipComponent,\n    parameters: {\n        docs: {\n            description: {\n                component: `\nA tooltip.\n\nInstead of this component you can use the tooltip directve \\`[tooltip]=\" 'text'\"\\`\n\n<img src=\"https://img.shields.io/badge/version-1.0.2-blue\" alt=\"Version: 1.0.2\" />\n\n                `\n            }\n        }\n    },\n    tags: ['autodocs']\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: () => ({\n        template: `<tooltip-component [style.position]=\"'relative'\"></tooltip-component>`\n    })\n}"
                }
            ],
            "projects/angular-component-library/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n    parameters: {\n        layout: 'centered',\n        controls: {\n            matchers: {\n                color: /(background|color)$/i,\n                date: /Date$/i\n            }\n        },\n        actions: {\n            argTypesRegex: '(Change|Clicked|Selected)$'\n        },\n        designToken: {\n            defaultTab: 'Colors',\n            tokens: {\n                color: ['../assets/styles.scss']\n            }\n        }\n    },\n    decorators: [\n        applicationConfig({\n            providers: [\n                {\n                    provide: TranslateLoader,\n                    useClass: FakeLoader\n                },\n                {\n                    provide: TranslateCompiler,\n                    useClass: TranslateFakeCompiler\n                },\n                {\n                    provide: TranslateParser,\n                    useClass: TranslateDefaultParser\n                },\n                {\n                    provide: MissingTranslationHandler,\n                    useValue: null\n                },\n                {\n                    provide: USE_DEFAULT_LANG,\n                    useValue: true\n                },\n                {\n                    provide: DEFAULT_LANGUAGE,\n                    useValue: true\n                },\n                {\n                    provide: USE_EXTEND,\n                    useValue: false\n                },\n                { provide: ISOALTE_TRANSLATE_SERVICE, useValue: false },\n                TranslateStore,\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: (translate: TranslateService) => () => {\n                        translate.setDefaultLang('de');\n                        translate.use('de');\n                        return Promise.resolve();\n                    },\n                    deps: [TranslateService],\n                    multi: true\n                }\n            ]\n        })\n    ]\n}"
                }
            ],
            "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts": [
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<OverviewWrapperComponent>",
                    "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/alert/alert.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertComponent>",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/badge/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeComponent>",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BorderedBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BorderlessBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CircleBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorPaletteComponent>",
                    "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CollapsibleComponent>",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerComponent>",
                    "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateRangePickerComponent>",
                    "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateTimePickerComponent>",
                    "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DropzoneComponent>",
                    "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FilledBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/input/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/loader/loader.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoaderComponent>",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MultiSelectComponent>",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NoDataComponent>",
                    "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/popover/popover.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PopoverComponent>",
                    "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchInputComponent>",
                    "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SegmentedBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/select/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsViewComponent>",
                    "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TagBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipComponent>",
                    "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableContentComponent>",
                    "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableHeaderComponent>",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/angular-component-library/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorWithLink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InfoAlert",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAlert",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningAlert",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Changes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RunningWithPostIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessWithPreIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hoverStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Inverted",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hoverStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ReadMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTemplateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "faDown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "faUp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconTemplateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "show",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hoverStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "animationStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loaderStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFilter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectedItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentItems",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "filters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "headerItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTemplateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multiSelectList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAlert",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TagBackgroundGreen",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Off",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "On",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}
