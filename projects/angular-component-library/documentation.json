{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "TestComponent",
            "id": "component-TestComponent-ce2cbdf6c07071f3dfcd40bb3784409c8bb2a341bce3bea204b697dba5d5f422d7f1db9ba297973d7379a638501aaca1f2a933d3dd364d5a39bdc8c73a3799f2",
            "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<p [tooltip]=\"'Hello'\">Hello Directive</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TooltipDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\r\nimport { Component } from '@angular/core';\r\nimport { TooltipDirective } from './tooltip.directive';\r\n\r\n@Component({\r\n    template: `<p [tooltip]=\"'Hello'\">Hello Directive</p>`,\r\n    standalone: true,\r\n    imports: [TooltipDirective]\r\n})\r\nclass TestComponent {}\r\n\r\nexport default {\r\n    title: 'Directives/Tooltip',\r\n    component: TestComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [TooltipDirective]\r\n        })\r\n    ]\r\n} as Meta;\r\n\r\ntype Story = StoryObj;\r\n\r\nexport const Sample: Story = {};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Active',\r\n        isActive: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        isDisabled: false,\r\n        isActive: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Active',\r\n        isActive: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Active',\r\n        isActive: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'navbar-btn',\r\n        active: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "animationStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "AnimationStyle"
            },
            {
                "name": "Changes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 1,\r\n        borderRadius: 50,\r\n        classStyle: 'changes',\r\n        isDisabled: false\r\n    }\r\n}"
            },
            {
                "name": "DarkStyle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        headerItemsTasks: headerItems,\r\n        searchFilters: filters,\r\n        tableStyle: TableStyle.DARK,\r\n        searchFilterChange: (event: any) => {\r\n            action('filter')(event);\r\n        },\r\n        sortColumnChange: (event: any) => {\r\n            action('sort')(event);\r\n        },\r\n        selectFilterChange: (event: any) => {\r\n            action('select')(event);\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "defaultTemplateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <collapsible-component [show]=\"false\" [classStyles]=\"'simple'\">\r\n        <div header>\r\n            <p [style.width.px]=\"200\">Header</p>\r\n        </div>\r\n        <div content>\r\n            <p [style.padding-left.px]=\"15\">Your Content</p>\r\n        </div>\r\n    </collapsible-component>\r\n `"
            },
            {
                "name": "defaultTemplateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <no-data-component>\r\n        <div content>\r\n            <p> Inner Content </p>\r\n        </div>\r\n    </no-data-component>\r\n `"
            },
            {
                "name": "defaultTemplateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <table-component [style.width]=\"'600px'\" [scrollbarWidth]=\"15\">\r\n        <div header>\r\n            <table-header-component \r\n                [headerItemsTasks]=\"items\" \r\n                [searchFilters]=\"filters\" \r\n                [multiSelectList]=\"multiSelectList\" \r\n                [showSearchLine]=\"showSearchLine\"\r\n                [tableStyle]=\"tableStyle\"\r\n                (searchFilterChange)=\"searchFilterChange($event)\" \r\n                (selectFilterChange)=\"selectFilterChange($event)\"\r\n                (sortColumnChange)=\"sortColumnChange($event)\">\r\n            </table-header-component>\r\n        </div>\r\n        <div content>\r\n            <table-content-component\r\n                [tableItems]=\"contentItems\" \r\n                (tableItemSelected)=\"tableItemSelected($event)\"\r\n                [tableStyle]=\"tableStyle\">\r\n            </table-content-component>\r\n        </div>\r\n    </table-component>\r\n `"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Delete',\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Delete',\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Delete',\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "DeleteActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteActive',\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "DeleteActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteActive',\r\n        isDisabled: false,\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "DeleteActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteActive',\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "DeleteDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteDisabled',\r\n        isDisabled: true,\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "DeleteDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteDisabled',\r\n        isDisabled: true,\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "DeleteDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteDisabled',\r\n        isDisabled: true,\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Disabled',\r\n        isDisabled: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        isDisabled: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Disabled',\r\n        isDisabled: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Disabled',\r\n        isDisabled: true,\r\n        faIcon: faInfoCircle,\r\n        classStyle: 'inverted'\r\n    }\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'navbar-btn',\r\n        disabled: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Disabled',\r\n        checked: true,\r\n        isDisabled: true\r\n    }\r\n}"
            },
            {
                "name": "DotLoader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Loading...',\r\n        animation: AnimationStyle.EASE,\r\n        loaderStyle: LoaderStyle.DOT_LOADER,\r\n        paddingTop: '0px'\r\n    }\r\n}"
            },
            {
                "name": "DotLoader2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Loading...',\r\n        animation: AnimationStyle.EASE,\r\n        loaderStyle: LoaderStyle.DOT_LOADER2,\r\n        paddingTop: '0px'\r\n    }\r\n}"
            },
            {
                "name": "ErrorWithLink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: 'Error Alert',\r\n        message: 'Error Message',\r\n        type: AlertType.ERROR,\r\n        visibleState: true\r\n    }\r\n}"
            },
            {
                "name": "faDown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IconDefinition",
                "defaultValue": "faChevronDown"
            },
            {
                "name": "faUp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IconDefinition",
                "defaultValue": "faChevronUp"
            },
            {
                "name": "hoverStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "HoverStyle"
            },
            {
                "name": "hoverStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "HoverStyle"
            },
            {
                "name": "hoverStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "HoverStyle"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfo: faInfo\r\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfo: faInfo,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\r\n    faChevronDown: faChevronDown,\r\n    faCheck: faCheck,\r\n    faFilter: faFilter,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
            },
            {
                "name": "iconOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, IconDefinition>",
                "defaultValue": "{\r\n    faChevronDown: faChevronDown,\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
            },
            {
                "name": "iconTemplateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <collapsible-component [(show)]=\"show\" [classStyles]=\"'simple'\">\r\n        <div header>\r\n            <div class=\"flex-row\">\r\n                <p [style.width.px]=\"200\">Header with icon</p>\r\n                <fa-icon [icon]=\"show ? faUp : faDown\"> </fa-icon>\r\n            </div>\r\n        </div>\r\n        <div content>\r\n            <p [style.padding-left.px]=\"15\">Your Content</p>\r\n        </div>\r\n    </collapsible-component>\r\n `"
            },
            {
                "name": "InfoAlert",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: 'Info Alert',\r\n        message: 'Info  Message',\r\n        type: AlertType.INFO,\r\n        visibleState: true,\r\n        navigationLink: 'pailot.com',\r\n        navigationLinkLabel: 'Further informations under pailot.com '\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const closeIcon = await canvas.findByTestId('close-alert');\r\n        await userEvent.click(closeIcon);\r\n\r\n        await expect(canvas.queryByTestId('close-alert')).toBeNull();\r\n    }\r\n}"
            },
            {
                "name": "Inverted",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Inverted',\r\n        faIcon: faInfoCircle,\r\n        hoverStyle: HoverStyle.INVERTED\r\n    }\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        size: 'large',\r\n        label: 'Button'\r\n    }\r\n}"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Label: ',\r\n        items: selectItems,\r\n        selectedItem: selectedItem,\r\n        filterPlaceholder: 'Select...',\r\n        show: true,\r\n        classStyle: SelectStyle.LIGHT,\r\n        width: '600px',\r\n        menuHeight: '100px'\r\n    },\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to select items'\r\n            }\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "LightStyle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        headerItemsTasks: headerItems,\r\n        searchFilters: filters,\r\n        tableStyle: TableStyle.LIGHT,\r\n        searchFilterChange: (event: any) => {\r\n            action('filter')(event);\r\n        },\r\n        sortColumnChange: (event: any) => {\r\n            action('sort')(event);\r\n        },\r\n        selectFilterChange: (event: any) => {\r\n            action('select')(event);\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "loaderStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "LoaderStyle"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        user: {\r\n            name: 'Jane Doe'\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n        const loginButton = canvas.getByRole('button', { name: /Log in/i });\r\n        await expect(loginButton).toBeInTheDocument();\r\n        await userEvent.click(loginButton);\r\n        await expect(loginButton).not.toBeInTheDocument();\r\n\r\n        const logoutButton = canvas.getByRole('button', { name: /Log out/i });\r\n        await expect(logoutButton).toBeInTheDocument();\r\n    }\r\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n    title: 'Example/Button',\r\n    component: ButtonComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        backgroundColor: {\r\n            control: 'color'\r\n        }\r\n    },\r\n    // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n    args: { onClick: fn() }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\r\n    title: 'Example/Header',\r\n    component: HeaderComponent,\r\n    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\r\n    tags: ['autodocs'],\r\n    parameters: {\r\n        // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n        layout: 'fullscreen'\r\n    },\r\n    args: {\r\n        onLogin: fn(),\r\n        onLogout: fn(),\r\n        onCreateAccount: fn()\r\n    }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<OverviewWrapperComponent>",
                "defaultValue": "{\r\n    title: 'Overview',\r\n    component: OverviewWrapperComponent,\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\r\n    title: 'Example/Page',\r\n    component: PageComponent,\r\n    parameters: {\r\n        // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n        layout: 'fullscreen'\r\n    }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertComponent>",
                "defaultValue": "{\r\n    title: 'Components/Alert',\r\n    component: AlertComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [RouterModule],\r\n            providers: [\r\n                {\r\n                    provide: ActivatedRoute,\r\n                    useValue: {\r\n                        snapshot: {\r\n                            paramMap: new Map([['id', '123']]),\r\n                            data: {}\r\n                        },\r\n                        params: [{ id: '123' }],\r\n                        queryParams: {}\r\n                    } // Mocking der ActivatedRoute, so dass sie params und andere Routen-Daten zurückgibt\r\n                }\r\n            ]\r\n        })\r\n    ],\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        title: { control: 'text', value: '' },\r\n        message: { control: 'text', value: '' },\r\n        type: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(types),\r\n            mapping: AlertType,\r\n            value: AlertType.SUCCESS\r\n        },\r\n        visibleState: { control: 'boolean', value: false },\r\n        navigationLink: { control: 'text', value: undefined },\r\n        navigationLinkLabel: { control: 'text', value: undefined },\r\n        visibleStateChange: { action: 'changed' }\r\n    },\r\n    args: { visibleStateChange: fn() }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeComponent>",
                "defaultValue": "{\r\n    title: 'Components/Badge',\r\n    component: BadgeComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        label: { control: 'text' },\r\n        borderRadius: { control: 'number' },\r\n        classStyle: {\r\n            control: 'select',\r\n            options: [\r\n                'running',\r\n                'failed',\r\n                'success',\r\n                'pending',\r\n                'changes',\r\n                'urgent',\r\n                'frozen',\r\n                'current',\r\n                'manual',\r\n                'free'\r\n            ]\r\n        },\r\n        isDisabled: { control: 'boolean' },\r\n        postIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        preIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BorderedBtnComponent>",
                "defaultValue": "{\r\n    title: 'Components/Buttons/Bordered Btn',\r\n    component: BorderedBtnComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        ariaLabel: { control: 'text' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        hoverStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(hoverStyles),\r\n            mapping: HoverStyle\r\n        },\r\n        showIcon: { control: 'boolean' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: {\r\n            control: 'select',\r\n            options: ['gray', 'delete']\r\n        },\r\n        width: { control: 'text' },\r\n        isSpinning: { control: 'boolean' },\r\n        isActive: { control: 'boolean' }\r\n    }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CircleBtnComponent>",
                "defaultValue": "{\r\n    title: 'Components/Buttons/Circle Btn',\r\n    component: CircleBtnComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        ariaLabel: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        backgroundColor: { control: 'text' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: { control: 'text' },\r\n        width: { control: 'text' },\r\n        isSpinning: { control: 'boolean' },\r\n        isActive: { control: 'boolean' }\r\n    }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\r\n    title: 'Components/Checkbox',\r\n    component: CheckboxComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        value: { control: 'boolean' },\r\n        mode: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(types),\r\n            mapping: EditMode,\r\n            value: EditMode.WRITE\r\n        },\r\n        height: { control: 'number' },\r\n        valueChange: { action: 'changed' }\r\n    },\r\n    args: { valueChange: fn() }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BorderlessBtnComponent>",
                "defaultValue": "{\r\n    title: 'Components/Buttons/Borderless Btn',\r\n    component: BorderlessBtnComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        ariaLabel: { control: 'text' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        hoverStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(hoverStyles),\r\n            mapping: HoverStyle\r\n        },\r\n        showIcon: { control: 'boolean' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: {\r\n            control: 'select',\r\n            options: ['delete']\r\n        },\r\n        width: { control: 'text' },\r\n        isSpinning: { control: 'boolean' },\r\n        isActive: { control: 'boolean' }\r\n    }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorPaletteComponent>",
                "defaultValue": "{\r\n    title: 'Components/ColorPalette',\r\n    component: ColorPaletteComponent,\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CollapsibleComponent>",
                "defaultValue": "{\r\n    title: 'Components/Collapsible',\r\n    component: CollapsibleComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A collapsible component provides per default only a \\`<div header></div>\\` and \\`<div content></div>\\`, so you can fill the table how you want.\r\n\r\n You could also add a faIcon in header to show that the row can be toggled -> like in the example.\r\n \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    decorators: [\r\n        (story) => {\r\n            const storyObj = story();\r\n            return {\r\n                moduleMetadata: {\r\n                    imports: [CollapsibleComponent, FontAwesomeModule]\r\n                },\r\n                template: storyObj.template,\r\n                props: storyObj.props\r\n            };\r\n        }\r\n    ],\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerComponent>",
                "defaultValue": "{\r\n    title: 'Components/Date Picker/Date',\r\n    component: DatePickerComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A date picker component.\r\n\r\n A date can be from type Date or string. The format has to be \\`yyyy-mm-dd\\` or \\`yyyy-mm-ddTHH:MM\\`  -> no time zone.\r\n \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        date: { control: 'text' },\r\n        withInput: { control: 'boolean' },\r\n        clear: { control: 'boolean', value: true },\r\n        randomId: { control: 'text' },\r\n        dateChanged: { action: 'changed', value: true }\r\n    },\r\n    args: { dateChanged: fn() },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateRangePickerComponent>",
                "defaultValue": "{\r\n    title: 'Components/Date Picker/Date Range',\r\n    component: DateRangePickerComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A date range picker component. \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        startDate: { control: 'date', value: new Date() },\r\n        endDate: { control: 'date', value: new Date() },\r\n        randomIdStart: { control: 'text' },\r\n        randomIdEnd: { control: 'text' },\r\n        startDateChange: { action: 'changed' },\r\n        endDateChange: { action: 'changed' }\r\n    },\r\n    args: {\r\n        startDateChange: fn(),\r\n        endDateChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateTimePickerComponent>",
                "defaultValue": "{\r\n    title: 'Components/Date Picker/Date time',\r\n    component: DateTimePickerComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A date time picker component.\r\n\r\n A date is from type string. The format has to be \\`yyyy-mm-dd\\` or \\`yyyy-mm-ddTHH:MM\\`  -> no time zone.\r\n \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        date: { control: 'text', value: '' },\r\n        mode: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(types),\r\n            mapping: EditMode,\r\n            value: EditMode.WRITE\r\n        },\r\n        height: { control: 'number' },\r\n        minWidth: { control: 'number' },\r\n        randomId: { control: 'text' },\r\n        dateChange: { action: 'changed' }\r\n    },\r\n    args: { dateChange: fn() },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DropzoneComponent>",
                "defaultValue": "{\r\n    title: 'Components/Dropzone',\r\n    component: DropzoneComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        choseFileLabel: { control: 'text' },\r\n        allowedExtension: { control: 'check', options: ['json'] },\r\n        fileArrayLength: { control: 'number' },\r\n        files: { control: { type: 'file', accept: '.json' } },\r\n        maxSizeOfFiles: { control: 'number' },\r\n        height: { control: 'text' },\r\n        width: { control: 'text' }\r\n    },\r\n    decorators: [\r\n        (story) => ({\r\n            template: `<div style=\"width: 300px;\">${story().template}</div>`,\r\n            props: story().props\r\n        })\r\n    ]\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DurationInputComponent>",
                "defaultValue": "{\r\n    title: 'Components/Duration Input',\r\n    component: DurationInputComponent,\r\n    argTypes: {\r\n        seconds: { control: 'number' },\r\n        mode: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(types),\r\n            mapping: EditMode,\r\n            value: EditMode.WRITE\r\n        },\r\n        maxDuration: { control: 'number' },\r\n        height: { control: 'text' },\r\n        secondsChange: { action: 'change' }\r\n    },\r\n    args: {\r\n        secondsChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FilledBtnComponent>",
                "defaultValue": "{\r\n    title: 'Components/Buttons/Filled Btn',\r\n    component: FilledBtnComponent,\r\n    argTypes: {\r\n        ariaLabel: { control: 'text' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        hoverStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(hoverStyles),\r\n            mapping: HoverStyle\r\n        },\r\n        showIcon: { control: 'boolean' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: {\r\n            control: 'select',\r\n            options: ['delete', 'not-emphrazed', 'navbar-btn']\r\n        },\r\n        width: { control: 'text' },\r\n        isSpinning: { control: 'boolean' },\r\n        isActive: { control: 'boolean' }\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\r\n    title: 'Components/Input',\r\n    component: InputComponent,\r\n    argTypes: {\r\n        input: { control: 'text' },\r\n        classStyles: {\r\n            control: 'select',\r\n            options: [\r\n                '',\r\n                'no-radius',\r\n                'full-width',\r\n                'small left',\r\n                'small right'\r\n            ]\r\n        },\r\n        placeholderText: { control: 'text' },\r\n        type: { control: 'text' },\r\n        inputChange: { action: 'change' }\r\n    },\r\n    args: {\r\n        type: 'text',\r\n        inputChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoaderComponent>",
                "defaultValue": "{\r\n    title: 'Components/Loader',\r\n    component: LoaderComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A loader component. \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        label: { control: 'text', value: '' },\r\n        loaderStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(loaderStyles),\r\n            mapping: LoaderStyle,\r\n            value: LoaderStyle.DOT_LOADER\r\n        },\r\n        animation: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(animationStyles),\r\n            mapping: AnimationStyle,\r\n            value: AnimationStyle.LINEAR\r\n        },\r\n        paddingTop: { control: 'text' }\r\n    },\r\n    args: {\r\n        paddingTop: '20%'\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MultiSelectComponent>",
                "defaultValue": "{\r\n    title: 'Components/Select/ Multi',\r\n    component: MultiSelectComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to select multiple items.'\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        items: { control: 'object' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        withFilter: { control: 'boolean' },\r\n        filterPlaceholder: { control: 'text' },\r\n        backgroundColor: { control: 'text' },\r\n        itemsSelected: { action: 'selected' }\r\n    },\r\n    args: {\r\n        label: '',\r\n        items: [],\r\n        itemsSelected: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavbarBtnComponent>",
                "defaultValue": "{\r\n    title: 'Components/Buttons/Navbar Btn',\r\n    component: NavbarBtnComponent,\r\n    decorators: [\r\n        (story) => ({\r\n            template: `<div [style.background]=\"'black'\">${story().template}</div>`,\r\n            props: story().props\r\n        })\r\n    ],\r\n    argTypes: {\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        disabled: { control: 'boolean' },\r\n        classStyle: { control: 'text' },\r\n        active: { control: 'boolean' }\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NoDataComponent>",
                "defaultValue": "{\r\n    title: 'Components/No Data',\r\n    component: NoDataComponent,\r\n    argTypes: {\r\n        translationKey: { control: 'text' }\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PopoverComponent>",
                "defaultValue": "{\r\n    title: 'Components/Popover',\r\n    component: PopoverComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA popover.\r\n\r\nA popover component .\r\n\r\n<img src=\"https://img.shields.io/badge/version-1.0.2-blue\" alt=\"Version: 1.0.2\" />\r\n\r\n                `\r\n            }\r\n        }\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchInputComponent>",
                "defaultValue": "{\r\n    title: 'Components/Search Input',\r\n    component: SearchInputComponent,\r\n    argTypes: {\r\n        filter: { control: 'text' },\r\n        classStyles: {\r\n            control: 'select',\r\n            options: [\r\n                '',\r\n                'no-radius',\r\n                'full-width',\r\n                'small left',\r\n                'small right'\r\n            ]\r\n        },\r\n        placeholderText: { control: 'text' },\r\n        filterChange: { action: 'change' }\r\n    },\r\n    args: { filterChange: fn() },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SegmentedBtnComponent>",
                "defaultValue": "{\r\n    title: 'Components/Segmented Btn',\r\n    component: SegmentedBtnComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to switch content'\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        btnArray: { control: 'object' },\r\n        activeBtn: { control: 'object' },\r\n        btnSelected: { action: 'selected' },\r\n        activeBtnChange: { action: 'activeBtn' }\r\n    },\r\n    args: {\r\n        btnSelected: fn(),\r\n        activeBtnChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\r\n    title: 'Components/Select/ Single',\r\n    component: SelectComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to select items.'\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        items: { control: 'object' },\r\n        selectedItem: { control: 'object' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        faIconBefore: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        classStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(selectStyle),\r\n            mapping: SelectStyle\r\n        },\r\n        withBlankOption: { control: 'boolean' },\r\n        withDeselect: { control: 'boolean' },\r\n        withFilter: { control: 'boolean' },\r\n        filterPlaceholder: { control: 'text' },\r\n        show: { control: 'boolean' },\r\n        width: { control: 'text' },\r\n        menuHeight: { control: 'text' },\r\n        showChange: { action: 'show' },\r\n        itemSelected: { action: 'selected' }\r\n    },\r\n    args: {\r\n        showChange: fn(),\r\n        itemSelected: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n    title: 'Components/Table/ Table',\r\n    component: TableComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [\r\n                TableComponent,\r\n                TableHeaderComponent,\r\n                TableContentComponent\r\n            ]\r\n        })\r\n    ],\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA table component provides per default only a \\`<div header></div>\\` and \\`<div content></div>\\`, so you can fill the table how you want.\r\n\r\nYou can also use the table component with a \\`table-header-component\\` and a \\`table-content-component\\`. \r\nTo use it you have to create the following items:\r\n\r\ntable-header-component\r\n- headerItemsTasks from type \\`ColumnHeaderItem\\`\r\n- searchFilters from type  \\`SearchFilter\\`\r\n- multiSelectList from type \\`{ [key: string]: TableColumnType[]}\\`\r\n\r\ntable-content-component\r\n- tableItems should have a parameter called \\`columns\\` from  type \\`Map<string, TableColumnType>)\\`\r\n\r\nNote: Every logic to sort the content has to be implemented by yourself. You have also to set scrollbarWidth, if table table can be scrolled.\r\n\r\n                `\r\n            }\r\n        }\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabsViewComponent>",
                "defaultValue": "{\r\n    title: 'Components/TabsView',\r\n    component: TabsViewComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [TabsViewComponent, TabComponent]\r\n        })\r\n    ],\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'TabsView to switch content'\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        selectedTabChanged: { action: 'changed' }\r\n    },\r\n    args: { selectedTabChanged: fn() },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TagBtnComponent>",
                "defaultValue": "{\r\n    title: 'Components/Tag',\r\n    component: TagBtnComponent,\r\n    argTypes: {\r\n        label: { control: 'text' },\r\n        backgroundColor: { control: 'text' },\r\n        removeTagSelected: { action: 'changed' }\r\n    },\r\n    args: { removeTagSelected: fn() },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToggleBtnComponent>",
                "defaultValue": "{\r\n    title: 'Components/Toggle Btn',\r\n    component: ToggleBtnComponent,\r\n    argTypes: {\r\n        label: { control: 'text' },\r\n        checked: { control: 'boolean' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: { control: 'text' },\r\n        checkedChange: { action: 'changed' }\r\n    },\r\n    args: { checkedChange: fn() },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipComponent>",
                "defaultValue": "{\r\n    title: 'Components/Tooltip',\r\n    component: TooltipComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA tooltip.\r\n\r\nInstead of this component you can use the tooltip directve \\`[tooltip]=\" 'text'\"\\`\r\n\r\n<img src=\"https://img.shields.io/badge/version-1.0.2-blue\" alt=\"Version: 1.0.2\" />\r\n\r\n                `\r\n            }\r\n        }\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableContentComponent>",
                "defaultValue": "{\r\n    title: 'Components/Table/Table Content',\r\n    component: TableContentComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA table content component.\r\n                `\r\n            }\r\n        }\r\n    },\r\n    decorators: [\r\n        (story) => ({\r\n            template: `<div [style.width.px]=\"'600'\">${story().template}</div>`,\r\n            props: story().props\r\n        })\r\n    ],\r\n    argTypes: {\r\n        tableItems: { control: 'object' },\r\n        tableHeight: { control: 'text' },\r\n        tableItemSelected: { action: 'select' }\r\n    },\r\n    args: {\r\n        tableItemSelected: fn(),\r\n        tableHeight: '275px'\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableHeaderComponent>",
                "defaultValue": "{\r\n    title: 'Components/Table/Table Header',\r\n    component: TableHeaderComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA table header component.\r\n                `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        headerItemsTasks: { control: 'object' },\r\n        searchFilters: { control: 'object' },\r\n        multiSelectList: { control: 'object' },\r\n        showSearchLine: { control: 'boolean' },\r\n        tableStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(tableStyle),\r\n            mapping: TableStyle\r\n        },\r\n        searchFilterChange: { action: 'search' },\r\n        sortColumnChange: { action: 'sort' },\r\n        selectFilterChange: { action: 'multi select' }\r\n    },\r\n    args: {\r\n        searchFilterChange: fn(),\r\n        sortColumnChange: fn(),\r\n        selectFilterChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
            },
            {
                "name": "Off",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Off',\r\n        checked: false\r\n    }\r\n}"
            },
            {
                "name": "On",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'On',\r\n        checked: true\r\n    }\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n    parameters: {\r\n        layout: 'centered',\r\n        controls: {\r\n            matchers: {\r\n                color: /(background|color)$/i,\r\n                date: /Date$/i\r\n            }\r\n        },\r\n        actions: {\r\n            argTypesRegex: '(Change|Clicked|Selected)$'\r\n        },\r\n        designToken: {\r\n            defaultTab: 'Colors',\r\n            tokens: {\r\n                color: ['../assets/styles.scss']\r\n            }\r\n        },\r\n        a11y: {\r\n            options: {\r\n                /*\r\n                 * Opt in to running WCAG 2.x AAA rules\r\n                 * Note that you must explicitly re-specify the defaults (all but the last array entry)\r\n                 * See https://github.com/dequelabs/axe-core/blob/develop/doc/API.md#options-parameter-examples for more details\r\n                 */\r\n                runOnly: ['wcag2a', 'wcag2aa', 'wcag21a', 'wcag21aa']\r\n            }\r\n        }\r\n    },\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: [\r\n                {\r\n                    provide: TranslateLoader,\r\n                    useClass: FakeLoader\r\n                },\r\n                {\r\n                    provide: TranslateCompiler,\r\n                    useClass: TranslateFakeCompiler\r\n                },\r\n                {\r\n                    provide: TranslateParser,\r\n                    useClass: TranslateDefaultParser\r\n                },\r\n                {\r\n                    provide: MissingTranslationHandler,\r\n                    useValue: null\r\n                },\r\n                {\r\n                    provide: USE_DEFAULT_LANG,\r\n                    useValue: true\r\n                },\r\n                {\r\n                    provide: DEFAULT_LANGUAGE,\r\n                    useValue: true\r\n                },\r\n                {\r\n                    provide: USE_EXTEND,\r\n                    useValue: false\r\n                },\r\n                { provide: ISOALTE_TRANSLATE_SERVICE, useValue: false },\r\n                TranslateStore,\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: (translate: TranslateService) => () => {\r\n                        translate.setDefaultLang('de');\r\n                        translate.use('de');\r\n                        return Promise.resolve();\r\n                    },\r\n                    deps: [TranslateService],\r\n                    multi: true\r\n                }\r\n            ]\r\n        })\r\n    ]\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        primary: true,\r\n        label: 'Button'\r\n    }\r\n}"
            },
            {
                "name": "ReadMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        value: true,\r\n        mode: EditMode.READ\r\n    }\r\n}"
            },
            {
                "name": "RunningWithPostIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Running',\r\n        borderRadius: 10,\r\n        classStyle: 'running',\r\n        isDisabled: false,\r\n        postIcon: faCheck,\r\n        preIcon: undefined\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Sample',\r\n        borderRadius: 10,\r\n        isDisabled: false,\r\n        postIcon: undefined,\r\n        preIcon: undefined\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Sample'\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        isDisabled: false,\r\n        faIcon: faCheck\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        value: false,\r\n        mode: EditMode.WRITE\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const checkbox = (await canvas.findByTestId(\r\n            'checkbox'\r\n        )) as HTMLInputElement;\r\n\r\n        const wasChecked = checkbox.checked;\r\n\r\n        await userEvent.click(checkbox);\r\n\r\n        await waitFor(() => {\r\n            expect(checkbox.checked).not.toBe(wasChecked);\r\n        });\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Sample',\r\n        isDisabled: false\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {}\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args\r\n        },\r\n        template: defaultTemplateMock\r\n    }),\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const header = (await canvas.findByTestId(\r\n            'collapse-header'\r\n        )) as HTMLInputElement;\r\n        const content = (await canvas.findByTestId(\r\n            'collapse-content'\r\n        )) as HTMLInputElement;\r\n\r\n        await waitFor(() => {\r\n            expect(content.classList.contains('hide')).toBe(true);\r\n            expect(content.classList.contains('show')).toBe(false);\r\n        });\r\n\r\n        await userEvent.click(header);\r\n\r\n        await waitFor(() => {\r\n            expect(content.classList.contains('show')).toBe(true);\r\n            expect(content.classList.contains('hide')).toBe(false);\r\n        });\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        date: '2025-05-11',\r\n        randomId: 'test123',\r\n        withInput: true\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const input = (await canvas.findByTestId(\r\n            'date-input-test123'\r\n        )) as HTMLInputElement;\r\n\r\n        const newDate = '2025-06-01';\r\n\r\n        await userEvent.clear(input);\r\n        await userEvent.type(input, newDate);\r\n\r\n        // trigger ngModelChange\r\n        await userEvent.tab();\r\n\r\n        await waitFor(() => {\r\n            expect(input.value).toBe(newDate);\r\n        });\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        randomIdStart: '123',\r\n        randomIdEnd: '456'\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const inputStart = (await canvas.findByTestId(\r\n            'date-input-123'\r\n        )) as HTMLInputElement;\r\n        const inputEnd = (await canvas.findByTestId(\r\n            'date-input-456'\r\n        )) as HTMLInputElement;\r\n\r\n        const newStartDate = '2025-06-01';\r\n        const newEndDate = '2025-06-30';\r\n\r\n        await userEvent.clear(inputStart);\r\n        await userEvent.type(inputStart, newStartDate);\r\n\r\n        // trigger ngModelChange\r\n        await userEvent.tab();\r\n\r\n        await waitFor(() => {\r\n            expect(inputStart.value).toBe(newStartDate);\r\n        });\r\n\r\n        await userEvent.clear(inputEnd);\r\n        await userEvent.type(inputEnd, newEndDate);\r\n\r\n        await userEvent.tab();\r\n\r\n        await waitFor(() => {\r\n            expect(inputEnd.value).toBe(newEndDate);\r\n        });\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        date: '2025-05-11',\r\n        withInput: true,\r\n        randomId: 'test123'\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const input = (await canvas.findByTestId(\r\n            'date-input-test123'\r\n        )) as HTMLInputElement;\r\n\r\n        const newDate = '2025-06-01T14:30';\r\n\r\n        await userEvent.clear(input);\r\n        await userEvent.type(input, newDate);\r\n\r\n        // trigger ngModelChange\r\n        await userEvent.tab();\r\n\r\n        await waitFor(() => {\r\n            expect(input.value).toBe(newDate);\r\n        });\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        height: '100px',\r\n        width: '300px',\r\n        choseFileLabel: 'Load Input files'\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {}\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Sample',\r\n        isDisabled: false\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        input: '123456'\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {}\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Label',\r\n        faIcon: faFilter,\r\n        items: selectItems,\r\n        backgroundColor: 'green'\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'navbar-btn',\r\n        faIcon: faCheck\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        translationKey: 'data.noData'\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: () => ({\r\n        template: `<div [style.border]=\"'1px solid black'\" [style.position]=\"'relative'\" [style.height.px]=\"30\" [style.width.px]=\"30\"><popover-component [show]=true><p>Hello</p></popover-component></div>`\r\n    })\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        filter: '123456'\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        btnArray: btnArray,\r\n        activeBtn: activeBtn\r\n    },\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to switch content'\r\n            }\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Label: ',\r\n        items: selectItems,\r\n        selectedItem: selectedItem,\r\n        filterPlaceholder: 'Select...',\r\n        show: true\r\n    },\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to select items'\r\n            }\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            items: headerItems,\r\n            filters: filters,\r\n            multiSelectList: multiSelectList,\r\n            contentItems: contentItems,\r\n            showSearchLine: true,\r\n            searchFilterChange: (event: any) => {\r\n                action('filter')(event);\r\n            },\r\n            sortColumnChange: (event: any) => {\r\n                action('sort')(event);\r\n            },\r\n            selectFilterChange: (event: any) => {\r\n                action('select')(event);\r\n            },\r\n            tableItemSelected: (event: any) => {\r\n                action('selected row')(event);\r\n            }\r\n        },\r\n        template: defaultTemplateMock\r\n    })\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: args,\r\n        template: templateMock\r\n    })\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: () => ({\r\n        template: `<tooltip-component [style.position]=\"'relative'\"></tooltip-component>`\r\n    })\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        tableItems: contentItems,\r\n        tableHeight: '200px',\r\n        tableItemSelected: (event: any) => {\r\n            action('selected row')(event);\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "Sample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        headerItemsTasks: headerItems,\r\n        searchFilters: filters,\r\n        searchFilterChange: (event: any) => {\r\n            action('filter')(event);\r\n        },\r\n        sortColumnChange: (event: any) => {\r\n            action('sort')(event);\r\n        },\r\n        selectFilterChange: (event: any) => {\r\n            action('select')(event);\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "SampleNgContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: () => ({\r\n        template: defaultTemplateMock\r\n    })\r\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Button'\r\n    }\r\n}"
            },
            {
                "name": "selectedItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new SelectItem('select1', undefined, Icons.faInfoCircle)"
            },
            {
                "name": "selectItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['item1', 'item2', 'item3']"
            },
            {
                "name": "selectItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    new SelectItem('select1', undefined, Icons.faInfoCircle),\r\n    new SelectItem('select2', undefined, Icons.faInfoCircle),\r\n    new SelectItem('select3')\r\n]"
            },
            {
                "name": "selectStyle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SelectStyle"
            },
            {
                "name": "show",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "false"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        size: 'small',\r\n        label: 'Button'\r\n    }\r\n}"
            },
            {
                "name": "Spinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Loading...',\r\n        animation: AnimationStyle.EASE,\r\n        loaderStyle: LoaderStyle.SPINNER,\r\n        paddingTop: '0px'\r\n    }\r\n}"
            },
            {
                "name": "Spinner2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Loading...',\r\n        animation: AnimationStyle.EASE,\r\n        loaderStyle: LoaderStyle.SPINNER2,\r\n        paddingTop: '0px'\r\n    }\r\n}"
            },
            {
                "name": "Spinning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Spinning',\r\n        isSpinning: true,\r\n        faIcon: faSpinner\r\n    }\r\n}"
            },
            {
                "name": "Spinning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        isDisabled: false,\r\n        isSpinning: true,\r\n        faIcon: faSpinner\r\n    }\r\n}"
            },
            {
                "name": "Spinning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Spinning',\r\n        isSpinning: true,\r\n        faIcon: faSpinner\r\n    }\r\n}"
            },
            {
                "name": "Spinning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Spinning',\r\n        isSpinning: true,\r\n        faIcon: faSpinner\r\n    }\r\n}"
            },
            {
                "name": "SuccessAlert",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: 'Success Alert',\r\n        message: 'Success Message',\r\n        type: AlertType.SUCCESS,\r\n        visibleState: true\r\n    }\r\n}"
            },
            {
                "name": "SuccessWithPreIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Success',\r\n        borderRadius: 10,\r\n        classStyle: 'success',\r\n        isDisabled: false,\r\n        postIcon: undefined,\r\n        preIcon: faInfo\r\n    }\r\n}"
            },
            {
                "name": "TableDarkWithoutSearchLine",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            items: headerItems,\r\n            filters: filters,\r\n            multiSelectList: multiSelectList,\r\n            contentItems: contentItems,\r\n            showSearchLine: false,\r\n            tableStyle: TableStyle.DARK,\r\n            searchFilterChange: (event: any) => {\r\n                action('filter')(event);\r\n            },\r\n            sortColumnChange: (event: any) => {\r\n                action('sort')(event);\r\n            },\r\n            selectFilterChange: (event: any) => {\r\n                action('select')(event);\r\n            },\r\n            tableItemSelected: (event: any) => {\r\n                action('selected row')(event);\r\n            }\r\n        },\r\n        template: defaultTemplateMock\r\n    })\r\n}"
            },
            {
                "name": "TableLightWithoutSearchLine",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            items: headerItems,\r\n            filters: filters,\r\n            multiSelectList: multiSelectList,\r\n            contentItems: contentItems,\r\n            showSearchLine: false,\r\n            tableStyle: TableStyle.LIGHT,\r\n            searchFilterChange: (event: any) => {\r\n                action('filter')(event);\r\n            },\r\n            sortColumnChange: (event: any) => {\r\n                action('sort')(event);\r\n            },\r\n            selectFilterChange: (event: any) => {\r\n                action('select')(event);\r\n            },\r\n            tableItemSelected: (event: any) => {\r\n                action('selected row')(event);\r\n            }\r\n        },\r\n        template: defaultTemplateMock\r\n    })\r\n}"
            },
            {
                "name": "tableStyle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TableStyle"
            },
            {
                "name": "Tag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Tag 1'\r\n    }\r\n}"
            },
            {
                "name": "TagBackgroundGreen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Tag 2',\r\n        backgroundColor: 'green'\r\n    }\r\n}"
            },
            {
                "name": "templateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <bordered-btn-component\r\n        (click)=\"click($event)\"\r\n        [label]=\"'Click me!'\">\r\n    </bordered-btn-component>\r\n `"
            },
            {
                "name": "templateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <borderless-btn-component\r\n        (click)=\"click($event)\"\r\n        [label]=\"'Click me!'\">\r\n    </borderless-btn-component>\r\n `"
            },
            {
                "name": "templateMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`   <filled-btn-component\r\n        (click)=\"click($event)\"\r\n        [label]=\"'Click me!'\">\r\n    </filled-btn-component>\r\n `"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "AlertType"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "EditMode"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "EditMode"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "EditMode"
            },
            {
                "name": "WarningAlert",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        title: 'Warning Alert',\r\n        message: 'Warning Message',\r\n        type: AlertType.WARNING,\r\n        visibleState: true\r\n    }\r\n}"
            },
            {
                "name": "WithAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            click: () => {\r\n                action('do something')();\r\n            }\r\n        },\r\n        template: templateMock\r\n    })\r\n}"
            },
            {
                "name": "WithAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            click: () => {\r\n                action('do something')();\r\n            }\r\n        },\r\n        template: templateMock\r\n    })\r\n}"
            },
            {
                "name": "WithAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            click: () => {\r\n                action('do something')();\r\n            }\r\n        },\r\n        template: templateMock\r\n    })\r\n}"
            },
            {
                "name": "WithAlert",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            selectedTabChanged: (payload: string) => {\r\n                action('tabSwitched')(payload);\r\n            }\r\n        },\r\n        template: templateMock\r\n    })\r\n}"
            },
            {
                "name": "WithFilter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        faIcon: faFilter,\r\n        items: selectItems,\r\n        withFilter: true,\r\n\r\n        filterPlaceholder: 'Select...',\r\n        backgroundColor: '#486bff'\r\n    }\r\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            faUp: faUp,\r\n            faDown: faDown,\r\n            show: show\r\n        },\r\n        template: iconTemplateMock\r\n    }),\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const header = (await canvas.findByTestId(\r\n            'collapse-header'\r\n        )) as HTMLInputElement;\r\n        const content = (await canvas.findByTestId(\r\n            'collapse-content'\r\n        )) as HTMLInputElement;\r\n\r\n        await waitFor(() => {\r\n            expect(content.classList.contains('hide')).toBe(true);\r\n            expect(content.classList.contains('show')).toBe(false);\r\n        });\r\n\r\n        await userEvent.click(header);\r\n\r\n        await waitFor(() => {\r\n            expect(content.classList.contains('show')).toBe(true);\r\n            expect(content.classList.contains('hide')).toBe(false);\r\n        });\r\n    }\r\n}"
            },
            {
                "name": "WithoutSearchLine",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        headerItemsTasks: headerItems,\r\n        searchFilters: filters,\r\n        showSearchLine: false,\r\n        searchFilterChange: (event: any) => {\r\n            action('filter')(event);\r\n        },\r\n        sortColumnChange: (event: any) => {\r\n            action('sort')(event);\r\n        },\r\n        selectFilterChange: (event: any) => {\r\n            action('select')(event);\r\n        }\r\n    }\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<OverviewWrapperComponent>",
                "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertComponent>",
                "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeComponent>",
                "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BorderedBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CircleBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BorderlessBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorPaletteComponent>",
                "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CollapsibleComponent>",
                "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerComponent>",
                "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateRangePickerComponent>",
                "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateTimePickerComponent>",
                "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DropzoneComponent>",
                "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DurationInputComponent>",
                "file": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FilledBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoaderComponent>",
                "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ModalWrapperComponent>",
                "file": "projects/angular-component-library/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MultiSelectComponent>",
                "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavbarBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NoDataComponent>",
                "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PopoverComponent>",
                "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchInputComponent>",
                "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SegmentedBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsViewComponent>",
                "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TagBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleBtnComponent>",
                "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipComponent>",
                "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableContentComponent>",
                "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableHeaderComponent>",
                "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Active',\r\n        isActive: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Delete',\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "DeleteActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteActive',\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "DeleteDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteDisabled',\r\n        isDisabled: true,\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Disabled',\r\n        isDisabled: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "hoverStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "HoverStyle"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfo: faInfo,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
                },
                {
                    "name": "Inverted",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Inverted',\r\n        faIcon: faInfoCircle,\r\n        hoverStyle: HoverStyle.INVERTED\r\n    }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BorderedBtnComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Buttons/Bordered Btn',\r\n    component: BorderedBtnComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        ariaLabel: { control: 'text' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        hoverStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(hoverStyles),\r\n            mapping: HoverStyle\r\n        },\r\n        showIcon: { control: 'boolean' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: {\r\n            control: 'select',\r\n            options: ['gray', 'delete']\r\n        },\r\n        width: { control: 'text' },\r\n        isSpinning: { control: 'boolean' },\r\n        isActive: { control: 'boolean' }\r\n    }\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Sample'\r\n    }\r\n}"
                },
                {
                    "name": "Spinning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Spinning',\r\n        isSpinning: true,\r\n        faIcon: faSpinner\r\n    }\r\n}"
                },
                {
                    "name": "templateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <bordered-btn-component\r\n        (click)=\"click($event)\"\r\n        [label]=\"'Click me!'\">\r\n    </bordered-btn-component>\r\n `"
                },
                {
                    "name": "WithAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            click: () => {\r\n                action('do something')();\r\n            }\r\n        },\r\n        template: templateMock\r\n    })\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        isDisabled: false,\r\n        isActive: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        isDisabled: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CircleBtnComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Buttons/Circle Btn',\r\n    component: CircleBtnComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        ariaLabel: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        backgroundColor: { control: 'text' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: { control: 'text' },\r\n        width: { control: 'text' },\r\n        isSpinning: { control: 'boolean' },\r\n        isActive: { control: 'boolean' }\r\n    }\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        isDisabled: false,\r\n        faIcon: faCheck\r\n    }\r\n}"
                },
                {
                    "name": "Spinning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        isDisabled: false,\r\n        isSpinning: true,\r\n        faIcon: faSpinner\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Active',\r\n        isActive: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Delete',\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "DeleteActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteActive',\r\n        isDisabled: false,\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "DeleteDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteDisabled',\r\n        isDisabled: true,\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Disabled',\r\n        isDisabled: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "hoverStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "HoverStyle"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BorderlessBtnComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Buttons/Borderless Btn',\r\n    component: BorderlessBtnComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        ariaLabel: { control: 'text' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        hoverStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(hoverStyles),\r\n            mapping: HoverStyle\r\n        },\r\n        showIcon: { control: 'boolean' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: {\r\n            control: 'select',\r\n            options: ['delete']\r\n        },\r\n        width: { control: 'text' },\r\n        isSpinning: { control: 'boolean' },\r\n        isActive: { control: 'boolean' }\r\n    }\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Sample',\r\n        isDisabled: false\r\n    }\r\n}"
                },
                {
                    "name": "Spinning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Spinning',\r\n        isSpinning: true,\r\n        faIcon: faSpinner\r\n    }\r\n}"
                },
                {
                    "name": "templateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <borderless-btn-component\r\n        (click)=\"click($event)\"\r\n        [label]=\"'Click me!'\">\r\n    </borderless-btn-component>\r\n `"
                },
                {
                    "name": "WithAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            click: () => {\r\n                action('do something')();\r\n            }\r\n        },\r\n        template: templateMock\r\n    })\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Active',\r\n        isActive: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Delete',\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "DeleteActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteActive',\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "DeleteDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'DeleteDisabled',\r\n        isDisabled: true,\r\n        isActive: true,\r\n        faIcon: faTrash,\r\n        classStyle: 'delete',\r\n        width: '200px'\r\n    }\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Disabled',\r\n        isDisabled: true,\r\n        faIcon: faInfoCircle,\r\n        classStyle: 'inverted'\r\n    }\r\n}"
                },
                {
                    "name": "hoverStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "HoverStyle"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FilledBtnComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Buttons/Filled Btn',\r\n    component: FilledBtnComponent,\r\n    argTypes: {\r\n        ariaLabel: { control: 'text' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        hoverStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(hoverStyles),\r\n            mapping: HoverStyle\r\n        },\r\n        showIcon: { control: 'boolean' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: {\r\n            control: 'select',\r\n            options: ['delete', 'not-emphrazed', 'navbar-btn']\r\n        },\r\n        width: { control: 'text' },\r\n        isSpinning: { control: 'boolean' },\r\n        isActive: { control: 'boolean' }\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Sample',\r\n        isDisabled: false\r\n    }\r\n}"
                },
                {
                    "name": "Spinning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Spinning',\r\n        isSpinning: true,\r\n        faIcon: faSpinner\r\n    }\r\n}"
                },
                {
                    "name": "templateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <filled-btn-component\r\n        (click)=\"click($event)\"\r\n        [label]=\"'Click me!'\">\r\n    </filled-btn-component>\r\n `"
                },
                {
                    "name": "WithAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            click: () => {\r\n                action('do something')();\r\n            }\r\n        },\r\n        template: templateMock\r\n    })\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'navbar-btn',\r\n        active: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'navbar-btn',\r\n        disabled: true,\r\n        faIcon: faInfoCircle\r\n    }\r\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavbarBtnComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Buttons/Navbar Btn',\r\n    component: NavbarBtnComponent,\r\n    decorators: [\r\n        (story) => ({\r\n            template: `<div [style.background]=\"'black'\">${story().template}</div>`,\r\n            props: story().props\r\n        })\r\n    ],\r\n    argTypes: {\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        disabled: { control: 'boolean' },\r\n        classStyle: { control: 'text' },\r\n        active: { control: 'boolean' }\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'navbar-btn',\r\n        faIcon: faCheck\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/loader/loader.stories.ts": [
                {
                    "name": "animationStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "AnimationStyle"
                },
                {
                    "name": "DotLoader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Loading...',\r\n        animation: AnimationStyle.EASE,\r\n        loaderStyle: LoaderStyle.DOT_LOADER,\r\n        paddingTop: '0px'\r\n    }\r\n}"
                },
                {
                    "name": "DotLoader2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Loading...',\r\n        animation: AnimationStyle.EASE,\r\n        loaderStyle: LoaderStyle.DOT_LOADER2,\r\n        paddingTop: '0px'\r\n    }\r\n}"
                },
                {
                    "name": "loaderStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "LoaderStyle"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoaderComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Loader',\r\n    component: LoaderComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A loader component. \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        label: { control: 'text', value: '' },\r\n        loaderStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(loaderStyles),\r\n            mapping: LoaderStyle,\r\n            value: LoaderStyle.DOT_LOADER\r\n        },\r\n        animation: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(animationStyles),\r\n            mapping: AnimationStyle,\r\n            value: AnimationStyle.LINEAR\r\n        },\r\n        paddingTop: { control: 'text' }\r\n    },\r\n    args: {\r\n        paddingTop: '20%'\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Spinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Loading...',\r\n        animation: AnimationStyle.EASE,\r\n        loaderStyle: LoaderStyle.SPINNER,\r\n        paddingTop: '0px'\r\n    }\r\n}"
                },
                {
                    "name": "Spinner2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Loading...',\r\n        animation: AnimationStyle.EASE,\r\n        loaderStyle: LoaderStyle.SPINNER2,\r\n        paddingTop: '0px'\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/badge/badge.stories.ts": [
                {
                    "name": "Changes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 1,\r\n        borderRadius: 50,\r\n        classStyle: 'changes',\r\n        isDisabled: false\r\n    }\r\n}"
                },
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfo: faInfo\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Badge',\r\n    component: BadgeComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        label: { control: 'text' },\r\n        borderRadius: { control: 'number' },\r\n        classStyle: {\r\n            control: 'select',\r\n            options: [\r\n                'running',\r\n                'failed',\r\n                'success',\r\n                'pending',\r\n                'changes',\r\n                'urgent',\r\n                'frozen',\r\n                'current',\r\n                'manual',\r\n                'free'\r\n            ]\r\n        },\r\n        isDisabled: { control: 'boolean' },\r\n        postIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        preIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "RunningWithPostIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Running',\r\n        borderRadius: 10,\r\n        classStyle: 'running',\r\n        isDisabled: false,\r\n        postIcon: faCheck,\r\n        preIcon: undefined\r\n    }\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Sample',\r\n        borderRadius: 10,\r\n        isDisabled: false,\r\n        postIcon: undefined,\r\n        preIcon: undefined\r\n    }\r\n}"
                },
                {
                    "name": "SuccessWithPreIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Success',\r\n        borderRadius: 10,\r\n        classStyle: 'success',\r\n        isDisabled: false,\r\n        postIcon: undefined,\r\n        preIcon: faInfo\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts": [
                {
                    "name": "DarkStyle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        headerItemsTasks: headerItems,\r\n        searchFilters: filters,\r\n        tableStyle: TableStyle.DARK,\r\n        searchFilterChange: (event: any) => {\r\n            action('filter')(event);\r\n        },\r\n        sortColumnChange: (event: any) => {\r\n            action('sort')(event);\r\n        },\r\n        selectFilterChange: (event: any) => {\r\n            action('select')(event);\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "LightStyle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        headerItemsTasks: headerItems,\r\n        searchFilters: filters,\r\n        tableStyle: TableStyle.LIGHT,\r\n        searchFilterChange: (event: any) => {\r\n            action('filter')(event);\r\n        },\r\n        sortColumnChange: (event: any) => {\r\n            action('sort')(event);\r\n        },\r\n        selectFilterChange: (event: any) => {\r\n            action('select')(event);\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableHeaderComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Table/Table Header',\r\n    component: TableHeaderComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA table header component.\r\n                `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        headerItemsTasks: { control: 'object' },\r\n        searchFilters: { control: 'object' },\r\n        multiSelectList: { control: 'object' },\r\n        showSearchLine: { control: 'boolean' },\r\n        tableStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(tableStyle),\r\n            mapping: TableStyle\r\n        },\r\n        searchFilterChange: { action: 'search' },\r\n        sortColumnChange: { action: 'sort' },\r\n        selectFilterChange: { action: 'multi select' }\r\n    },\r\n    args: {\r\n        searchFilterChange: fn(),\r\n        sortColumnChange: fn(),\r\n        selectFilterChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        headerItemsTasks: headerItems,\r\n        searchFilters: filters,\r\n        searchFilterChange: (event: any) => {\r\n            action('filter')(event);\r\n        },\r\n        sortColumnChange: (event: any) => {\r\n            action('sort')(event);\r\n        },\r\n        selectFilterChange: (event: any) => {\r\n            action('select')(event);\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "tableStyle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TableStyle"
                },
                {
                    "name": "WithoutSearchLine",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        headerItemsTasks: headerItems,\r\n        searchFilters: filters,\r\n        showSearchLine: false,\r\n        searchFilterChange: (event: any) => {\r\n            action('filter')(event);\r\n        },\r\n        sortColumnChange: (event: any) => {\r\n            action('sort')(event);\r\n        },\r\n        selectFilterChange: (event: any) => {\r\n            action('select')(event);\r\n        }\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts": [
                {
                    "name": "defaultTemplateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <collapsible-component [show]=\"false\" [classStyles]=\"'simple'\">\r\n        <div header>\r\n            <p [style.width.px]=\"200\">Header</p>\r\n        </div>\r\n        <div content>\r\n            <p [style.padding-left.px]=\"15\">Your Content</p>\r\n        </div>\r\n    </collapsible-component>\r\n `"
                },
                {
                    "name": "faDown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "defaultValue": "faChevronDown"
                },
                {
                    "name": "faUp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "defaultValue": "faChevronUp"
                },
                {
                    "name": "iconTemplateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <collapsible-component [(show)]=\"show\" [classStyles]=\"'simple'\">\r\n        <div header>\r\n            <div class=\"flex-row\">\r\n                <p [style.width.px]=\"200\">Header with icon</p>\r\n                <fa-icon [icon]=\"show ? faUp : faDown\"> </fa-icon>\r\n            </div>\r\n        </div>\r\n        <div content>\r\n            <p [style.padding-left.px]=\"15\">Your Content</p>\r\n        </div>\r\n    </collapsible-component>\r\n `"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CollapsibleComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Collapsible',\r\n    component: CollapsibleComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A collapsible component provides per default only a \\`<div header></div>\\` and \\`<div content></div>\\`, so you can fill the table how you want.\r\n\r\n You could also add a faIcon in header to show that the row can be toggled -> like in the example.\r\n \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    decorators: [\r\n        (story) => {\r\n            const storyObj = story();\r\n            return {\r\n                moduleMetadata: {\r\n                    imports: [CollapsibleComponent, FontAwesomeModule]\r\n                },\r\n                template: storyObj.template,\r\n                props: storyObj.props\r\n            };\r\n        }\r\n    ],\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args\r\n        },\r\n        template: defaultTemplateMock\r\n    }),\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const header = (await canvas.findByTestId(\r\n            'collapse-header'\r\n        )) as HTMLInputElement;\r\n        const content = (await canvas.findByTestId(\r\n            'collapse-content'\r\n        )) as HTMLInputElement;\r\n\r\n        await waitFor(() => {\r\n            expect(content.classList.contains('hide')).toBe(true);\r\n            expect(content.classList.contains('show')).toBe(false);\r\n        });\r\n\r\n        await userEvent.click(header);\r\n\r\n        await waitFor(() => {\r\n            expect(content.classList.contains('show')).toBe(true);\r\n            expect(content.classList.contains('hide')).toBe(false);\r\n        });\r\n    }\r\n}"
                },
                {
                    "name": "show",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "false"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            faUp: faUp,\r\n            faDown: faDown,\r\n            show: show\r\n        },\r\n        template: iconTemplateMock\r\n    }),\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const header = (await canvas.findByTestId(\r\n            'collapse-header'\r\n        )) as HTMLInputElement;\r\n        const content = (await canvas.findByTestId(\r\n            'collapse-content'\r\n        )) as HTMLInputElement;\r\n\r\n        await waitFor(() => {\r\n            expect(content.classList.contains('hide')).toBe(true);\r\n            expect(content.classList.contains('show')).toBe(false);\r\n        });\r\n\r\n        await userEvent.click(header);\r\n\r\n        await waitFor(() => {\r\n            expect(content.classList.contains('show')).toBe(true);\r\n            expect(content.classList.contains('hide')).toBe(false);\r\n        });\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts": [
                {
                    "name": "defaultTemplateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <no-data-component>\r\n        <div content>\r\n            <p> Inner Content </p>\r\n        </div>\r\n    </no-data-component>\r\n `"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NoDataComponent>",
                    "defaultValue": "{\r\n    title: 'Components/No Data',\r\n    component: NoDataComponent,\r\n    argTypes: {\r\n        translationKey: { control: 'text' }\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        translationKey: 'data.noData'\r\n    }\r\n}"
                },
                {
                    "name": "SampleNgContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: () => ({\r\n        template: defaultTemplateMock\r\n    })\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table.stories.ts": [
                {
                    "name": "defaultTemplateMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`   <table-component [style.width]=\"'600px'\" [scrollbarWidth]=\"15\">\r\n        <div header>\r\n            <table-header-component \r\n                [headerItemsTasks]=\"items\" \r\n                [searchFilters]=\"filters\" \r\n                [multiSelectList]=\"multiSelectList\" \r\n                [showSearchLine]=\"showSearchLine\"\r\n                [tableStyle]=\"tableStyle\"\r\n                (searchFilterChange)=\"searchFilterChange($event)\" \r\n                (selectFilterChange)=\"selectFilterChange($event)\"\r\n                (sortColumnChange)=\"sortColumnChange($event)\">\r\n            </table-header-component>\r\n        </div>\r\n        <div content>\r\n            <table-content-component\r\n                [tableItems]=\"contentItems\" \r\n                (tableItemSelected)=\"tableItemSelected($event)\"\r\n                [tableStyle]=\"tableStyle\">\r\n            </table-content-component>\r\n        </div>\r\n    </table-component>\r\n `"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Table/ Table',\r\n    component: TableComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [\r\n                TableComponent,\r\n                TableHeaderComponent,\r\n                TableContentComponent\r\n            ]\r\n        })\r\n    ],\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA table component provides per default only a \\`<div header></div>\\` and \\`<div content></div>\\`, so you can fill the table how you want.\r\n\r\nYou can also use the table component with a \\`table-header-component\\` and a \\`table-content-component\\`. \r\nTo use it you have to create the following items:\r\n\r\ntable-header-component\r\n- headerItemsTasks from type \\`ColumnHeaderItem\\`\r\n- searchFilters from type  \\`SearchFilter\\`\r\n- multiSelectList from type \\`{ [key: string]: TableColumnType[]}\\`\r\n\r\ntable-content-component\r\n- tableItems should have a parameter called \\`columns\\` from  type \\`Map<string, TableColumnType>)\\`\r\n\r\nNote: Every logic to sort the content has to be implemented by yourself. You have also to set scrollbarWidth, if table table can be scrolled.\r\n\r\n                `\r\n            }\r\n        }\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            items: headerItems,\r\n            filters: filters,\r\n            multiSelectList: multiSelectList,\r\n            contentItems: contentItems,\r\n            showSearchLine: true,\r\n            searchFilterChange: (event: any) => {\r\n                action('filter')(event);\r\n            },\r\n            sortColumnChange: (event: any) => {\r\n                action('sort')(event);\r\n            },\r\n            selectFilterChange: (event: any) => {\r\n                action('select')(event);\r\n            },\r\n            tableItemSelected: (event: any) => {\r\n                action('selected row')(event);\r\n            }\r\n        },\r\n        template: defaultTemplateMock\r\n    })\r\n}"
                },
                {
                    "name": "TableDarkWithoutSearchLine",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            items: headerItems,\r\n            filters: filters,\r\n            multiSelectList: multiSelectList,\r\n            contentItems: contentItems,\r\n            showSearchLine: false,\r\n            tableStyle: TableStyle.DARK,\r\n            searchFilterChange: (event: any) => {\r\n                action('filter')(event);\r\n            },\r\n            sortColumnChange: (event: any) => {\r\n                action('sort')(event);\r\n            },\r\n            selectFilterChange: (event: any) => {\r\n                action('select')(event);\r\n            },\r\n            tableItemSelected: (event: any) => {\r\n                action('selected row')(event);\r\n            }\r\n        },\r\n        template: defaultTemplateMock\r\n    })\r\n}"
                },
                {
                    "name": "TableLightWithoutSearchLine",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            items: headerItems,\r\n            filters: filters,\r\n            multiSelectList: multiSelectList,\r\n            contentItems: contentItems,\r\n            showSearchLine: false,\r\n            tableStyle: TableStyle.LIGHT,\r\n            searchFilterChange: (event: any) => {\r\n                action('filter')(event);\r\n            },\r\n            sortColumnChange: (event: any) => {\r\n                action('sort')(event);\r\n            },\r\n            selectFilterChange: (event: any) => {\r\n                action('select')(event);\r\n            },\r\n            tableItemSelected: (event: any) => {\r\n                action('selected row')(event);\r\n            }\r\n        },\r\n        template: defaultTemplateMock\r\n    })\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Disabled',\r\n        checked: true,\r\n        isDisabled: true\r\n    }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToggleBtnComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Toggle Btn',\r\n    component: ToggleBtnComponent,\r\n    argTypes: {\r\n        label: { control: 'text' },\r\n        checked: { control: 'boolean' },\r\n        isDisabled: { control: 'boolean' },\r\n        classStyle: { control: 'text' },\r\n        checkedChange: { action: 'changed' }\r\n    },\r\n    args: { checkedChange: fn() },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Off",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Off',\r\n        checked: false\r\n    }\r\n}"
                },
                {
                    "name": "On",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'On',\r\n        checked: true\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/alert/alert.stories.ts": [
                {
                    "name": "ErrorWithLink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: 'Error Alert',\r\n        message: 'Error Message',\r\n        type: AlertType.ERROR,\r\n        visibleState: true\r\n    }\r\n}"
                },
                {
                    "name": "InfoAlert",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: 'Info Alert',\r\n        message: 'Info  Message',\r\n        type: AlertType.INFO,\r\n        visibleState: true,\r\n        navigationLink: 'pailot.com',\r\n        navigationLinkLabel: 'Further informations under pailot.com '\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const closeIcon = await canvas.findByTestId('close-alert');\r\n        await userEvent.click(closeIcon);\r\n\r\n        await expect(canvas.queryByTestId('close-alert')).toBeNull();\r\n    }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Alert',\r\n    component: AlertComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [RouterModule],\r\n            providers: [\r\n                {\r\n                    provide: ActivatedRoute,\r\n                    useValue: {\r\n                        snapshot: {\r\n                            paramMap: new Map([['id', '123']]),\r\n                            data: {}\r\n                        },\r\n                        params: [{ id: '123' }],\r\n                        queryParams: {}\r\n                    } // Mocking der ActivatedRoute, so dass sie params und andere Routen-Daten zurückgibt\r\n                }\r\n            ]\r\n        })\r\n    ],\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        title: { control: 'text', value: '' },\r\n        message: { control: 'text', value: '' },\r\n        type: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(types),\r\n            mapping: AlertType,\r\n            value: AlertType.SUCCESS\r\n        },\r\n        visibleState: { control: 'boolean', value: false },\r\n        navigationLink: { control: 'text', value: undefined },\r\n        navigationLinkLabel: { control: 'text', value: undefined },\r\n        visibleStateChange: { action: 'changed' }\r\n    },\r\n    args: { visibleStateChange: fn() }\r\n}"
                },
                {
                    "name": "SuccessAlert",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: 'Success Alert',\r\n        message: 'Success Message',\r\n        type: AlertType.SUCCESS,\r\n        visibleState: true\r\n    }\r\n}"
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "AlertType"
                },
                {
                    "name": "WarningAlert",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        title: 'Warning Alert',\r\n        message: 'Warning Message',\r\n        type: AlertType.WARNING,\r\n        visibleState: true\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts": [
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\r\n    faChevronDown: faChevronDown,\r\n    faCheck: faCheck,\r\n    faFilter: faFilter,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MultiSelectComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Select/ Multi',\r\n    component: MultiSelectComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to select multiple items.'\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        items: { control: 'object' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        withFilter: { control: 'boolean' },\r\n        filterPlaceholder: { control: 'text' },\r\n        backgroundColor: { control: 'text' },\r\n        itemsSelected: { action: 'selected' }\r\n    },\r\n    args: {\r\n        label: '',\r\n        items: [],\r\n        itemsSelected: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Label',\r\n        faIcon: faFilter,\r\n        items: selectItems,\r\n        backgroundColor: 'green'\r\n    }\r\n}"
                },
                {
                    "name": "selectItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['item1', 'item2', 'item3']"
                },
                {
                    "name": "WithFilter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        faIcon: faFilter,\r\n        items: selectItems,\r\n        withFilter: true,\r\n\r\n        filterPlaceholder: 'Select...',\r\n        backgroundColor: '#486bff'\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/select/select.stories.ts": [
                {
                    "name": "iconOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, IconDefinition>",
                    "defaultValue": "{\r\n    faChevronDown: faChevronDown,\r\n    faCheck: faCheck,\r\n    faExclamation: faExclamation,\r\n    faInfoCircle: faInfoCircle,\r\n    faSpinner: faSpinner,\r\n    faTrash: faTrash\r\n}"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Label: ',\r\n        items: selectItems,\r\n        selectedItem: selectedItem,\r\n        filterPlaceholder: 'Select...',\r\n        show: true,\r\n        classStyle: SelectStyle.LIGHT,\r\n        width: '600px',\r\n        menuHeight: '100px'\r\n    },\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to select items'\r\n            }\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Select/ Single',\r\n    component: SelectComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to select items.'\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        items: { control: 'object' },\r\n        selectedItem: { control: 'object' },\r\n        label: { control: 'text' },\r\n        faIcon: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        faIconBefore: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(iconOptions),\r\n            mapping: iconOptions\r\n        },\r\n        classStyle: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.keys(selectStyle),\r\n            mapping: SelectStyle\r\n        },\r\n        withBlankOption: { control: 'boolean' },\r\n        withDeselect: { control: 'boolean' },\r\n        withFilter: { control: 'boolean' },\r\n        filterPlaceholder: { control: 'text' },\r\n        show: { control: 'boolean' },\r\n        width: { control: 'text' },\r\n        menuHeight: { control: 'text' },\r\n        showChange: { action: 'show' },\r\n        itemSelected: { action: 'selected' }\r\n    },\r\n    args: {\r\n        showChange: fn(),\r\n        itemSelected: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Label: ',\r\n        items: selectItems,\r\n        selectedItem: selectedItem,\r\n        filterPlaceholder: 'Select...',\r\n        show: true\r\n    },\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to select items'\r\n            }\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "selectedItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new SelectItem('select1', undefined, Icons.faInfoCircle)"
                },
                {
                    "name": "selectItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    new SelectItem('select1', undefined, Icons.faInfoCircle),\r\n    new SelectItem('select2', undefined, Icons.faInfoCircle),\r\n    new SelectItem('select3')\r\n]"
                },
                {
                    "name": "selectStyle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SelectStyle"
                }
            ],
            "projects/angular-component-library/src/lib/stories/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        size: 'large',\r\n        label: 'Button'\r\n    }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n    title: 'Example/Button',\r\n    component: ButtonComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        backgroundColor: {\r\n            control: 'color'\r\n        }\r\n    },\r\n    // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n    args: { onClick: fn() }\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        primary: true,\r\n        label: 'Button'\r\n    }\r\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Button'\r\n    }\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        size: 'small',\r\n        label: 'Button'\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        user: {\r\n            name: 'Jane Doe'\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\r\n    title: 'Example/Header',\r\n    component: HeaderComponent,\r\n    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\r\n    tags: ['autodocs'],\r\n    parameters: {\r\n        // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n        layout: 'fullscreen'\r\n    },\r\n    args: {\r\n        onLogin: fn(),\r\n        onLogout: fn(),\r\n        onCreateAccount: fn()\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n        const loginButton = canvas.getByRole('button', { name: /Log in/i });\r\n        await expect(loginButton).toBeInTheDocument();\r\n        await userEvent.click(loginButton);\r\n        await expect(loginButton).not.toBeInTheDocument();\r\n\r\n        const logoutButton = canvas.getByRole('button', { name: /Log out/i });\r\n        await expect(logoutButton).toBeInTheDocument();\r\n    }\r\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\r\n    title: 'Example/Page',\r\n    component: PageComponent,\r\n    parameters: {\r\n        // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n        layout: 'fullscreen'\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<OverviewWrapperComponent>",
                    "defaultValue": "{\r\n    title: 'Overview',\r\n    component: OverviewWrapperComponent,\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Checkbox',\r\n    component: CheckboxComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        value: { control: 'boolean' },\r\n        mode: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(types),\r\n            mapping: EditMode,\r\n            value: EditMode.WRITE\r\n        },\r\n        height: { control: 'number' },\r\n        valueChange: { action: 'changed' }\r\n    },\r\n    args: { valueChange: fn() }\r\n}"
                },
                {
                    "name": "ReadMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        value: true,\r\n        mode: EditMode.READ\r\n    }\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        value: false,\r\n        mode: EditMode.WRITE\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const checkbox = (await canvas.findByTestId(\r\n            'checkbox'\r\n        )) as HTMLInputElement;\r\n\r\n        const wasChecked = checkbox.checked;\r\n\r\n        await userEvent.click(checkbox);\r\n\r\n        await waitFor(() => {\r\n            expect(checkbox.checked).not.toBe(wasChecked);\r\n        });\r\n    }\r\n}"
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "EditMode"
                }
            ],
            "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorPaletteComponent>",
                    "defaultValue": "{\r\n    title: 'Components/ColorPalette',\r\n    component: ColorPaletteComponent,\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {}\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Date Picker/Date',\r\n    component: DatePickerComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A date picker component.\r\n\r\n A date can be from type Date or string. The format has to be \\`yyyy-mm-dd\\` or \\`yyyy-mm-ddTHH:MM\\`  -> no time zone.\r\n \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        date: { control: 'text' },\r\n        withInput: { control: 'boolean' },\r\n        clear: { control: 'boolean', value: true },\r\n        randomId: { control: 'text' },\r\n        dateChanged: { action: 'changed', value: true }\r\n    },\r\n    args: { dateChanged: fn() },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        date: '2025-05-11',\r\n        randomId: 'test123',\r\n        withInput: true\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const input = (await canvas.findByTestId(\r\n            'date-input-test123'\r\n        )) as HTMLInputElement;\r\n\r\n        const newDate = '2025-06-01';\r\n\r\n        await userEvent.clear(input);\r\n        await userEvent.type(input, newDate);\r\n\r\n        // trigger ngModelChange\r\n        await userEvent.tab();\r\n\r\n        await waitFor(() => {\r\n            expect(input.value).toBe(newDate);\r\n        });\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateRangePickerComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Date Picker/Date Range',\r\n    component: DateRangePickerComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A date range picker component. \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        startDate: { control: 'date', value: new Date() },\r\n        endDate: { control: 'date', value: new Date() },\r\n        randomIdStart: { control: 'text' },\r\n        randomIdEnd: { control: 'text' },\r\n        startDateChange: { action: 'changed' },\r\n        endDateChange: { action: 'changed' }\r\n    },\r\n    args: {\r\n        startDateChange: fn(),\r\n        endDateChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        randomIdStart: '123',\r\n        randomIdEnd: '456'\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const inputStart = (await canvas.findByTestId(\r\n            'date-input-123'\r\n        )) as HTMLInputElement;\r\n        const inputEnd = (await canvas.findByTestId(\r\n            'date-input-456'\r\n        )) as HTMLInputElement;\r\n\r\n        const newStartDate = '2025-06-01';\r\n        const newEndDate = '2025-06-30';\r\n\r\n        await userEvent.clear(inputStart);\r\n        await userEvent.type(inputStart, newStartDate);\r\n\r\n        // trigger ngModelChange\r\n        await userEvent.tab();\r\n\r\n        await waitFor(() => {\r\n            expect(inputStart.value).toBe(newStartDate);\r\n        });\r\n\r\n        await userEvent.clear(inputEnd);\r\n        await userEvent.type(inputEnd, newEndDate);\r\n\r\n        await userEvent.tab();\r\n\r\n        await waitFor(() => {\r\n            expect(inputEnd.value).toBe(newEndDate);\r\n        });\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateTimePickerComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Date Picker/Date time',\r\n    component: DateTimePickerComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\n A date time picker component.\r\n\r\n A date is from type string. The format has to be \\`yyyy-mm-dd\\` or \\`yyyy-mm-ddTHH:MM\\`  -> no time zone.\r\n \r\n                 `\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        date: { control: 'text', value: '' },\r\n        mode: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(types),\r\n            mapping: EditMode,\r\n            value: EditMode.WRITE\r\n        },\r\n        height: { control: 'number' },\r\n        minWidth: { control: 'number' },\r\n        randomId: { control: 'text' },\r\n        dateChange: { action: 'changed' }\r\n    },\r\n    args: { dateChange: fn() },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        date: '2025-05-11',\r\n        withInput: true,\r\n        randomId: 'test123'\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n\r\n        const input = (await canvas.findByTestId(\r\n            'date-input-test123'\r\n        )) as HTMLInputElement;\r\n\r\n        const newDate = '2025-06-01T14:30';\r\n\r\n        await userEvent.clear(input);\r\n        await userEvent.type(input, newDate);\r\n\r\n        // trigger ngModelChange\r\n        await userEvent.tab();\r\n\r\n        await waitFor(() => {\r\n            expect(input.value).toBe(newDate);\r\n        });\r\n    }\r\n}"
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "EditMode"
                }
            ],
            "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DropzoneComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Dropzone',\r\n    component: DropzoneComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        choseFileLabel: { control: 'text' },\r\n        allowedExtension: { control: 'check', options: ['json'] },\r\n        fileArrayLength: { control: 'number' },\r\n        files: { control: { type: 'file', accept: '.json' } },\r\n        maxSizeOfFiles: { control: 'number' },\r\n        height: { control: 'text' },\r\n        width: { control: 'text' }\r\n    },\r\n    decorators: [\r\n        (story) => ({\r\n            template: `<div style=\"width: 300px;\">${story().template}</div>`,\r\n            props: story().props\r\n        })\r\n    ]\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        height: '100px',\r\n        width: '300px',\r\n        choseFileLabel: 'Load Input files'\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DurationInputComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Duration Input',\r\n    component: DurationInputComponent,\r\n    argTypes: {\r\n        seconds: { control: 'number' },\r\n        mode: {\r\n            control: {\r\n                type: 'select'\r\n            },\r\n            options: Object.values(types),\r\n            mapping: EditMode,\r\n            value: EditMode.WRITE\r\n        },\r\n        maxDuration: { control: 'number' },\r\n        height: { control: 'text' },\r\n        secondsChange: { action: 'change' }\r\n    },\r\n    args: {\r\n        secondsChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {}\r\n}"
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "EditMode"
                }
            ],
            "projects/angular-component-library/src/lib/components/input/input.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Input',\r\n    component: InputComponent,\r\n    argTypes: {\r\n        input: { control: 'text' },\r\n        classStyles: {\r\n            control: 'select',\r\n            options: [\r\n                '',\r\n                'no-radius',\r\n                'full-width',\r\n                'small left',\r\n                'small right'\r\n            ]\r\n        },\r\n        placeholderText: { control: 'text' },\r\n        type: { control: 'text' },\r\n        inputChange: { action: 'change' }\r\n    },\r\n    args: {\r\n        type: 'text',\r\n        inputChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        input: '123456'\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/popover/popover.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PopoverComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Popover',\r\n    component: PopoverComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA popover.\r\n\r\nA popover component .\r\n\r\n<img src=\"https://img.shields.io/badge/version-1.0.2-blue\" alt=\"Version: 1.0.2\" />\r\n\r\n                `\r\n            }\r\n        }\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: () => ({\r\n        template: `<div [style.border]=\"'1px solid black'\" [style.position]=\"'relative'\" [style.height.px]=\"30\" [style.width.px]=\"30\"><popover-component [show]=true><p>Hello</p></popover-component></div>`\r\n    })\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchInputComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Search Input',\r\n    component: SearchInputComponent,\r\n    argTypes: {\r\n        filter: { control: 'text' },\r\n        classStyles: {\r\n            control: 'select',\r\n            options: [\r\n                '',\r\n                'no-radius',\r\n                'full-width',\r\n                'small left',\r\n                'small right'\r\n            ]\r\n        },\r\n        placeholderText: { control: 'text' },\r\n        filterChange: { action: 'change' }\r\n    },\r\n    args: { filterChange: fn() },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        filter: '123456'\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SegmentedBtnComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Segmented Btn',\r\n    component: SegmentedBtnComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to switch content'\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        btnArray: { control: 'object' },\r\n        activeBtn: { control: 'object' },\r\n        btnSelected: { action: 'selected' },\r\n        activeBtnChange: { action: 'activeBtn' }\r\n    },\r\n    args: {\r\n        btnSelected: fn(),\r\n        activeBtnChange: fn()\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        btnArray: btnArray,\r\n        activeBtn: activeBtn\r\n    },\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'Component to switch content'\r\n            }\r\n        }\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabsViewComponent>",
                    "defaultValue": "{\r\n    title: 'Components/TabsView',\r\n    component: TabsViewComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [TabsViewComponent, TabComponent]\r\n        })\r\n    ],\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                story: 'TabsView to switch content'\r\n            }\r\n        }\r\n    },\r\n    argTypes: {\r\n        selectedTabChanged: { action: 'changed' }\r\n    },\r\n    args: { selectedTabChanged: fn() },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: args,\r\n        template: templateMock\r\n    })\r\n}"
                },
                {
                    "name": "WithAlert",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            selectedTabChanged: (payload: string) => {\r\n                action('tabSwitched')(payload);\r\n            }\r\n        },\r\n        template: templateMock\r\n    })\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TagBtnComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Tag',\r\n    component: TagBtnComponent,\r\n    argTypes: {\r\n        label: { control: 'text' },\r\n        backgroundColor: { control: 'text' },\r\n        removeTagSelected: { action: 'changed' }\r\n    },\r\n    args: { removeTagSelected: fn() },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Tag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Tag 1'\r\n    }\r\n}"
                },
                {
                    "name": "TagBackgroundGreen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Tag 2',\r\n        backgroundColor: 'green'\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Tooltip',\r\n    component: TooltipComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA tooltip.\r\n\r\nInstead of this component you can use the tooltip directve \\`[tooltip]=\" 'text'\"\\`\r\n\r\n<img src=\"https://img.shields.io/badge/version-1.0.2-blue\" alt=\"Version: 1.0.2\" />\r\n\r\n                `\r\n            }\r\n        }\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: () => ({\r\n        template: `<tooltip-component [style.position]=\"'relative'\"></tooltip-component>`\r\n    })\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableContentComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Table/Table Content',\r\n    component: TableContentComponent,\r\n    parameters: {\r\n        docs: {\r\n            description: {\r\n                component: `\r\nA table content component.\r\n                `\r\n            }\r\n        }\r\n    },\r\n    decorators: [\r\n        (story) => ({\r\n            template: `<div [style.width.px]=\"'600'\">${story().template}</div>`,\r\n            props: story().props\r\n        })\r\n    ],\r\n    argTypes: {\r\n        tableItems: { control: 'object' },\r\n        tableHeight: { control: 'text' },\r\n        tableItemSelected: { action: 'select' }\r\n    },\r\n    args: {\r\n        tableItemSelected: fn(),\r\n        tableHeight: '275px'\r\n    },\r\n    tags: ['autodocs']\r\n}"
                },
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        tableItems: contentItems,\r\n        tableHeight: '200px',\r\n        tableItemSelected: (event: any) => {\r\n            action('selected row')(event);\r\n        }\r\n    }\r\n}"
                }
            ],
            "projects/angular-component-library/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n    parameters: {\r\n        layout: 'centered',\r\n        controls: {\r\n            matchers: {\r\n                color: /(background|color)$/i,\r\n                date: /Date$/i\r\n            }\r\n        },\r\n        actions: {\r\n            argTypesRegex: '(Change|Clicked|Selected)$'\r\n        },\r\n        designToken: {\r\n            defaultTab: 'Colors',\r\n            tokens: {\r\n                color: ['../assets/styles.scss']\r\n            }\r\n        },\r\n        a11y: {\r\n            options: {\r\n                /*\r\n                 * Opt in to running WCAG 2.x AAA rules\r\n                 * Note that you must explicitly re-specify the defaults (all but the last array entry)\r\n                 * See https://github.com/dequelabs/axe-core/blob/develop/doc/API.md#options-parameter-examples for more details\r\n                 */\r\n                runOnly: ['wcag2a', 'wcag2aa', 'wcag21a', 'wcag21aa']\r\n            }\r\n        }\r\n    },\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: [\r\n                {\r\n                    provide: TranslateLoader,\r\n                    useClass: FakeLoader\r\n                },\r\n                {\r\n                    provide: TranslateCompiler,\r\n                    useClass: TranslateFakeCompiler\r\n                },\r\n                {\r\n                    provide: TranslateParser,\r\n                    useClass: TranslateDefaultParser\r\n                },\r\n                {\r\n                    provide: MissingTranslationHandler,\r\n                    useValue: null\r\n                },\r\n                {\r\n                    provide: USE_DEFAULT_LANG,\r\n                    useValue: true\r\n                },\r\n                {\r\n                    provide: DEFAULT_LANGUAGE,\r\n                    useValue: true\r\n                },\r\n                {\r\n                    provide: USE_EXTEND,\r\n                    useValue: false\r\n                },\r\n                { provide: ISOALTE_TRANSLATE_SERVICE, useValue: false },\r\n                TranslateStore,\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: (translate: TranslateService) => () => {\r\n                        translate.setDefaultLang('de');\r\n                        translate.use('de');\r\n                        return Promise.resolve();\r\n                    },\r\n                    deps: [TranslateService],\r\n                    multi: true\r\n                }\r\n            ]\r\n        })\r\n    ]\r\n}"
                }
            ],
            "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts": [
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/angular-component-library/src/lib/components/modal/modal.stories.ts": [
                {
                    "name": "Sample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/angular-component-library/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {}\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<OverviewWrapperComponent>",
                    "file": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/alert/alert.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertComponent>",
                    "file": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/badge/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeComponent>",
                    "file": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BorderedBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CircleBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BorderlessBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorPaletteComponent>",
                    "file": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CollapsibleComponent>",
                    "file": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerComponent>",
                    "file": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateRangePickerComponent>",
                    "file": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateTimePickerComponent>",
                    "file": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DropzoneComponent>",
                    "file": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DurationInputComponent>",
                    "file": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FilledBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/input/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/loader/loader.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoaderComponent>",
                    "file": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/modal/modal.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ModalWrapperComponent>",
                    "file": "projects/angular-component-library/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MultiSelectComponent>",
                    "file": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavbarBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NoDataComponent>",
                    "file": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/popover/popover.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PopoverComponent>",
                    "file": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchInputComponent>",
                    "file": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SegmentedBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/select/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsViewComponent>",
                    "file": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TagBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleBtnComponent>",
                    "file": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipComponent>",
                    "file": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableContentComponent>",
                    "file": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableHeaderComponent>",
                    "file": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/angular-component-library/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorWithLink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InfoAlert",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAlert",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningAlert",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/alert/alert.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Changes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RunningWithPostIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessWithPreIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/badge/badge.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hoverStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Inverted",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/bordered-btn/bordered-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hoverStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/borderless-btn/borderless-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ReadMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/circle-btn/circle-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTemplateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "faDown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "faUp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconTemplateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "show",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/collapsible/collapsible.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/color-palette/color-palette.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-picker/date-picker.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-range-picker/date-range-picker.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/date-time-picker/date-time-picker.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/dropzone/dropzone.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/duration-input/duration-input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeleteDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hoverStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/filled-btn/filled-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/input/input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "animationStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DotLoader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DotLoader2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loaderStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spinner2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/loader/loader.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/modal/modal.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFilter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/multi-select/multi-select.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/navbar-btn/navbar-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTemplateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SampleNgContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/no-data/no-data.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/popover/popover.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/search-input/search-input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/segmented-btn/segmented-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectedItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectStyle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/select/select.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-content/table-content.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DarkStyle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LightStyle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tableStyle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutSearchLine",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table-header/table-header.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTemplateMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TableDarkWithoutSearchLine",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TableLightWithoutSearchLine",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/table/table.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAlert",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tabs-view/tabs-view.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TagBackgroundGreen",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tag-btn/tag-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Off",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "On",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/toggle-btn/toggle-btn.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/components/tooltip/tooltip.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/directives/tooltip-directive.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/header.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/overview-wrapper.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/angular-component-library/src/lib/stories/page.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}